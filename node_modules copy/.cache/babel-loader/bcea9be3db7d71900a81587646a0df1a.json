{"ast":null,"code":"var _jsxFileName = \"/Users/nick/devedit/src/components/AddReplys/index.js\";\nimport React from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\"; //import * as ROUTES from \"../../constants/routes\";\n\nconst moment = require(\"moment\");\n\nclass AddReplys extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.togglePopup = () => {\n      //const{commentId}=this.props\n      this.setState({\n        showPopup: !this.state.showPopup\n      }); //console.log(\"this is the commentId\", commentId)\n    };\n\n    this.cancle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const commentId = this.props.commentId; //console.log(\"this is the event\",e)\n      //const {commentId}=this.props.comments.commentId\n\n      console.log(\"this is the commentId for the reply\", commentId); // console.log(\"show the reply\",this.state.reply)\n\n      this.props.firebase.replys(commentId).add({\n        // commentId:commentId,\n        reply: this.state.reply,\n        timeCreated: moment().format(\" MMMM DD, YYYY  --  hh:mm:ss A \")\n      }).then(docRef => {//console.log(\" this is the replysID \", docRef.id)\n      });\n      this.setState({\n        reply: \"\"\n      });\n    };\n\n    this.handleChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        reply: e.target.value\n      });\n    };\n\n    this.state = {\n      comments: [],\n      showAll: false,\n      replies: [],\n      // isOldestFirst: \"\",\n      //commentId:\"\",\n      reply: \"\",\n      timeCreated: \"\" // showPopup:true\n\n    };\n  }\n\n  render() {\n    // const { comment, limited, timeCreated,commentId } = this.props; \n    const commentId = this.props; //console .log(\"this is the comment Id i have from comment\",commentId)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Reply\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.togglePopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Reply\")), this.state.showPopup ? React.createElement(\"form\", {\n      className: \"card-addcomment\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"commentgrid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"commentContent\" // id=\"reply\"\n      ,\n      type: \"text\",\n      value: this.state.reply //name=\"reply\"\n      ,\n      placeholder: \"Write your Reply here! \",\n      autoFocus: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit-btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Reply\"), React.createElement(\"button\", {\n      className: \"submit-btn\",\n      onClick: this.cancle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"cancle\"))) : null);\n  }\n\n}\n\nexport default compose(withFirebase, withRouter)(AddReplys);","map":{"version":3,"sources":["/Users/nick/devedit/src/components/AddReplys/index.js"],"names":["React","withFirebase","withRouter","compose","moment","require","AddReplys","Component","constructor","props","togglePopup","setState","showPopup","state","cancle","handleSubmit","e","preventDefault","commentId","console","log","firebase","replys","add","reply","timeCreated","format","then","docRef","handleChange","target","value","comments","showAll","replies","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n//import * as ROUTES from \"../../constants/routes\";\n\nconst moment = require(\"moment\");\nclass AddReplys extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          comments: [],\n          showAll: false,\n         replies:[],\n         // isOldestFirst: \"\",\n          //commentId:\"\",\n          reply:\"\",\n          timeCreated:\"\",\n         // showPopup:true\n        };\n      }\n      \n      togglePopup = () => {\n        //const{commentId}=this.props\n        this.setState({\n          showPopup: !this.state.showPopup\n        });\n        //console.log(\"this is the commentId\", commentId)\n      };\n      cancle = () => {\n        this.setState({ showPopup: false });\n      };\n\n      handleSubmit = (e) => {\n       e.preventDefault();\n       const commentId=this.props.commentId\n       //console.log(\"this is the event\",e)\n        //const {commentId}=this.props.comments.commentId\n        console.log(\"this is the commentId for the reply\",commentId)\n     // console.log(\"show the reply\",this.state.reply)\n        this.props.firebase\n        .replys(commentId)\n        .add({\n         // commentId:commentId,\n          reply:this.state.reply,\n          timeCreated: moment().format(` MMMM DD, YYYY  --  hh:mm:ss A `)\n        })\n        .then(\n          docRef => {\n    //console.log(\" this is the replysID \", docRef.id)\n          }\n        )\n        ;\n        \n        this.setState({\n          reply:\"\"\n          \n        });\n      \n      };\n       handleChange = e => {\n        console.log(e.target.value)\n        this.setState({\n          reply: e.target.value\n        });\n      };\n    \n    render() {\n       // const { comment, limited, timeCreated,commentId } = this.props; \n        const commentId =this.props\n//console .log(\"this is the comment Id i have from comment\",commentId)\n    return (\n        <div>\n             <div className=\"Reply\">\n                <button onClick={this.togglePopup}>\n                {/*  <i className=\"fa fa-comment\"> </i>*/}Reply\n                </button>\n              </div>\n              {this.state.showPopup ? (\n        <form\n          className=\"card-addcomment\"\n          onSubmit={this.handleSubmit}\n        >\n          <div className=\"commentgrid\">\n            <textarea\n              className=\"commentContent\"\n             // id=\"reply\"\n              type=\"text\"\n              value={this.state.reply}\n              //name=\"reply\"\n              placeholder=\"Write your Reply here! \"\n              autoFocus={true}\n              onChange={this.handleChange}\n            ></textarea>\n\n            <button\n              className=\"submit-btn\"\n              type=\"submit\"\n\n            >\n              Reply\n            </button>\n            <button className=\"submit-btn\" onClick={this.cancle}>\n              cancle\n            </button>\n          </div>\n        </form>\n         \n         ) : null}\n      </div>\n    );\n  }\n}\n\nexport default compose(withFirebase, withRouter)(AddReplys);\n"]},"metadata":{},"sourceType":"module"}