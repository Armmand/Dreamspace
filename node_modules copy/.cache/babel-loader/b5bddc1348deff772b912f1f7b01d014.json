{"ast":null,"code":"var _jsxFileName = \"/Users/nick/devedit/src/components/Replycomments/index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { AuthUserContext } from \"../Session\";\nimport Singlecomment from \"../../components/Singlecomment\";\n\nconst moment = require(\"moment\");\n\nclass ReplyComments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      const childCommentId = this.props.childCommentId;\n      console.log(\"chidCommentId in replycomment\", childCommentId);\n      this.unsubscribe = this.props.firebase.comments() //.where(\"commentId\", \"==\", parentCommentId)\n      .onSnapshot(snapshot => {\n        const childcomments = [];\n        let parentCommentId = \"\";\n        snapshot.forEach(doc => {\n          const data = doc.data(); // console.log(\"doc.id\",doc.id)\n\n          parentCommentId = doc.id;\n          data.ParentCommentId = parentCommentId;\n          childcomments.push(data);\n        });\n        this.setState({\n          childComments: childcomments,\n          parentCommontId: parentCommentId\n        });\n        console.log(\"this is my childcomments  in addreplys commponent\", this.state.childComments);\n        console.log(\"my parentCommentId is here\", this.state.parentCommentId);\n      });\n    };\n\n    this.togglePopup = () => {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    };\n\n    this.cancle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.renderReplycomment = () => {\n      // const childComments = this.state.childComments\n      console.log(\"list of ChildComments \", this.state.childComments);\n      const _this$props = this.props,\n            commentId = _this$props.commentId,\n            comments = _this$props.comments,\n            timeCreated = _this$props.timeCreated,\n            childCommentId = _this$props.childCommentId;\n      console.log(\"childCommentId\", childCommentId);\n      this.state.childComments && this.state.childComments.map((comment, index) => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, commentId === comment.parentCommentId && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Singlecomment, {\n        comment: comment,\n        key: index //limited={limited}\n        ,\n        timeCreated: timeCreated,\n        commentId: comment.commentId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(ReplyComments, {\n        comment: comment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))));\n    };\n\n    this.state = {\n      showAll: false,\n      showPopup: false,\n      username: \"\",\n      childComments: [],\n      parentCommentId: \"\"\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          timeCreated = _this$props2.timeCreated,\n          commentID = _this$props2.commentID,\n          userName = _this$props2.userName,\n          replysId = _this$props2.replysId,\n          comments = _this$props2.comments; //  console.log(\"total comments in Replycomments\",comments)\n\n    const myFunction = this.renderReplycomment();\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"replypage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-angle-down \",\n      style: {\n        width: \"10em\"\n      },\n      onClick: () => this.togglePopup(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" \", \"view\", \"\", \" \", this.props.totallReplys, \" more \", \" Replys \")), this.renderReplyComment));\n  }\n\n}\n\nexport default compose(withFirebase, withRouter)(ReplyComments);","map":{"version":3,"sources":["/Users/nick/devedit/src/components/Replycomments/index.js"],"names":["React","Component","Fragment","withFirebase","withRouter","compose","AuthUserContext","Singlecomment","moment","require","ReplyComments","constructor","props","componentDidMount","childCommentId","console","log","unsubscribe","firebase","comments","onSnapshot","snapshot","childcomments","parentCommentId","forEach","doc","data","id","ParentCommentId","push","setState","childComments","parentCommontId","state","togglePopup","showPopup","cancle","renderReplycomment","commentId","timeCreated","map","comment","index","showAll","username","render","commentID","userName","replysId","myFunction","authUser","width","totallReplys","renderReplyComment"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { AuthUserContext } from \"../Session\";\nimport Singlecomment from \"../../components/Singlecomment\";\n\nconst moment = require(\"moment\");\n\nclass ReplyComments extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAll: false,\n      showPopup: false,\n      username: \"\",\n      childComments:[],\n      parentCommentId:\"\"\n    };\n  }\n  \n  componentDidMount = () => {\n  const {childCommentId}=this.props\n  console.log(\"chidCommentId in replycomment\",childCommentId)\n    this.unsubscribe = this.props.firebase\n      .comments()\n      //.where(\"commentId\", \"==\", parentCommentId)\n     \n      .onSnapshot(snapshot => {\n        const childcomments = [];\n        let parentCommentId = \"\";\n        snapshot.forEach(doc => {\n          const data = doc.data();\n         // console.log(\"doc.id\",doc.id)\n          parentCommentId = doc.id;\n          data.ParentCommentId = parentCommentId;\n          childcomments.push(data);\n        });\n        this.setState({\n          childComments: childcomments,\n          parentCommontId:parentCommentId\n        });\n       \n       console.log(\n          \"this is my childcomments  in addreplys commponent\",\n          this.state.childComments\n        );\n        console.log(\"my parentCommentId is here\",this.state.parentCommentId)\n      });\n  };\n  togglePopup = () => {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  };\n  cancle = () => {\n    this.setState({ showPopup: false });\n  };\n  renderReplycomment = ()=>{\n  // const childComments = this.state.childComments\n    console.log(\"list of ChildComments \",this.state.childComments);\n    const {commentId,comments,timeCreated,childCommentId}=this.props\n    console.log(\"childCommentId\",childCommentId)\n this.state. childComments &&\n  this.state.childComments.map((comment, index) => (\n    \n    <React.Fragment>\n  \n   { commentId===comment.parentCommentId && \n        <div>\n           <Singlecomment\n           comment={comment}\n           key={index}\n           //limited={limited}\n           timeCreated={timeCreated}\n          commentId={comment.commentId}\n          />\n          <ReplyComments comment={comment}  />\n        </div>\n  }\n    </React.Fragment>\n  ));\n}\n  render() {\n    const { timeCreated, commentID, userName, replysId, comments } = this.props;\n    //  console.log(\"total comments in Replycomments\",comments)\n    const myFunction=this.renderReplycomment()\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            <div className=\"replypage\">\n              <i\n                className=\"fas fa-angle-down \"\n                style={{ width: \"10em\" }}\n                onClick={() => this.togglePopup()}\n              >\n                {\" \"}\n                view{\"\"} {this.props.totallReplys}\n                {\" more \"}\n                {\" Replys \"}\n              </i>\n            </div>\n\n            {this.renderReplyComment}\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default compose(withFirebase, withRouter)(ReplyComments);\n"]},"metadata":{},"sourceType":"module"}