{"ast":null,"code":"var _jsxFileName = \"/Users/nick/devedit/src/containers/Directory/index.js\";\nimport React from 'react'; // import { compose } from \"recompose\";\n\nimport DirectorySearchBar from '../../ctd-project-components/DirectorySearchBar';\nimport DirectoryList from '../../ctd-project-components/DirectoryList';\n\nclass Directory extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      crewDirectory: []\n    };\n  }\n\n  componentDidMount() {\n    this.directoryAirTable();\n  }\n\n  directoryAirTable() {\n    const url = \"https://api.airtable.com/v0/appBu5I7tEJENCp45/Employee%20directory\";\n    fetch(url, {\n      headers: {\n        Authorization: \"Bearer \" + process.env.REACT_APP_DIRECTORY_AIRTABLE_KEY\n      }\n    }).then(response => response.json()).then(responseData => {\n      console.log(\"directory data \", responseData);\n      const crewDirectory = responseData.records;\n      console.log(\"crewDirectory \", crewDirectory);\n      this.setState({\n        crewDirectory: crewDirectory\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"directory-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.crewDirectory && React.createElement(DirectorySearchBar, {\n      crewDirectory: this.state.crewDirectory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), this.state.crewDirectory && React.createElement(DirectoryList, {\n      crewDirectory: this.state.crewDirectory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Directory;","map":{"version":3,"sources":["/Users/nick/devedit/src/containers/Directory/index.js"],"names":["React","DirectorySearchBar","DirectoryList","Directory","Component","state","crewDirectory","componentDidMount","directoryAirTable","url","fetch","headers","Authorization","process","env","REACT_APP_DIRECTORY_AIRTABLE_KEY","then","response","json","responseData","console","log","records","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,iDAA/B;AACA,OAAOC,aAAP,MAA0B,4CAA1B;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,aAAa,EAAE;AADT,KAD8B;AAAA;;AAItCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,iBAAL;AACD;;AAEDA,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAG,oEAAZ;AACEC,IAAAA,KAAK,CAACD,GAAD,EAAM;AACTE,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAYC,OAAO,CAACC,GAAR,CAAYC;AAAzC;AADA,KAAN,CAAL,CAGCC,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB,EAICF,IAJD,CAIMG,YAAY,IAAI;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,YAA/B;AACA,YAAMb,aAAa,GAAGa,YAAY,CAACG,OAAnC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bf,aAA9B;AACA,WAAKiB,QAAL,CAAc;AAACjB,QAAAA,aAAa,EAAEA;AAAhB,OAAd;AACD,KATD;AAUD;;AAEHkB,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,SAAS,EAAG,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnB,KAAL,CAAWC,aAAX,IAA6B,oBAAC,kBAAD;AAC5B,MAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aADE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhC,EAIG,KAAKD,KAAL,CAAWC,aAAX,IAA6B,oBAAC,aAAD;AAC5B,MAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aADE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJhC,CADF;AAYD;;AApCqC;;AAuCxC,eAAeH,SAAf","sourcesContent":["import React from 'react';\n// import { compose } from \"recompose\";\nimport DirectorySearchBar from '../../ctd-project-components/DirectorySearchBar';\nimport DirectoryList from '../../ctd-project-components/DirectoryList';\n\nclass Directory extends React.Component {\n  state = {\n    crewDirectory: [],\n  }\n  componentDidMount() {\n    this.directoryAirTable();\n  }\n\n  directoryAirTable() {\n    const url = \"https://api.airtable.com/v0/appBu5I7tEJENCp45/Employee%20directory\";\n      fetch(url, {\n        headers: { Authorization: \"Bearer \" + process.env.REACT_APP_DIRECTORY_AIRTABLE_KEY  }\n      })\n      .then(response => response.json())\n      .then(responseData => {\n        console.log(\"directory data \", responseData);\n        const crewDirectory = responseData.records;\n        console.log(\"crewDirectory \", crewDirectory);\n        this.setState({crewDirectory: crewDirectory})\n      });\n    }\n\n  render() {\n\n    return(\n      <div className = 'directory-container'>\n        {this.state.crewDirectory && (<DirectorySearchBar \n          crewDirectory={this.state.crewDirectory}\n        />)}\n        {this.state.crewDirectory && (<DirectoryList \n          crewDirectory={this.state.crewDirectory}\n        />)}\n     </div>\n   \n    )\n    \n  }\n}\n\nexport default Directory "]},"metadata":{},"sourceType":"module"}