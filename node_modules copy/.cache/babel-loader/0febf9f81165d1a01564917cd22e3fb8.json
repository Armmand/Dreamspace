{"ast":null,"code":"var _jsxFileName = \"/Users/nick/devedit/src/components/Session/withAuthorization.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      console.log(\"Running with Authorization\");\n      this.listener = this.props.firebase.onAuthUserListener(authUser => {\n        console.log(authUser);\n\n        if (!condition(authUser)) {\n          console.log(\"I think not\");\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      }, console.log(\"Ohhh yeah!\"), () => this.props.history.push(ROUTES.SIGN_IN));\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, authUser => condition(authUser) ? React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })) : null);\n    }\n\n  }\n\n  return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;","map":{"version":3,"sources":["/Users/nick/devedit/src/components/Session/withAuthorization.js"],"names":["React","withRouter","compose","AuthUserContext","withFirebase","ROUTES","withAuthorization","condition","Component","WithAuthorization","componentDidMount","console","log","listener","props","firebase","onAuthUserListener","authUser","history","push","SIGN_IN","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAOC,eAAP,MAA4B,WAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;;AAEA,MAAMC,iBAAiB,GAAGC,SAAS,IAAIC,SAAS,IAAI;AAClD,QAAMC,iBAAN,SAAgCT,KAAK,CAACQ,SAAtC,CAAgD;AAC9CE,IAAAA,iBAAiB,GAAG;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,WAAKC,QAAL,GAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,kBAApB,CACdC,QAAQ,IAAI;AACVN,QAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;;AACA,YAAI,CAACV,SAAS,CAACU,QAAD,CAAd,EAA0B;AACxBN,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,eAAKE,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwBd,MAAM,CAACe,OAA/B;AACD;AACF,OAPa,EAQdT,OAAO,CAACC,GAAR,CAAY,YAAZ,CARc,EASd,MAAM,KAAKE,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwBd,MAAM,CAACe,OAA/B,CATQ,CAAhB;AAYD;;AAEDC,IAAAA,oBAAoB,GAAG;AACrB,WAAKR,QAAL;AACD;;AAEDS,IAAAA,MAAM,GAAG;AAEP,aACE,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,QAAQ,IACPV,SAAS,CAACU,QAAD,CAAT,GAAsB,oBAAC,SAAD,oBAAe,KAAKH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtB,GAAsD,IAF1D,CADF;AAOD;;AA9B6C;;AAiChD,SAAOZ,OAAO,CACZD,UADY,EAEZG,YAFY,CAAP,CAGLK,iBAHK,CAAP;AAID,CAtCD;;AAwCA,eAAeH,iBAAf","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      console.log(\"Running with Authorization\")\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          console.log(authUser)\n          if (!condition(authUser)) {\n            console.log(\"I think not\")\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        console.log(\"Ohhh yeah!\"),\n        () => this.props.history.push(ROUTES.SIGN_IN),\n      );\n\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;"]},"metadata":{},"sourceType":"module"}