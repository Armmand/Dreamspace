{"ast":null,"code":"var _jsxFileName = \"/Users/nick/devedit/src/containers/ProjectDashBoard/index.js\";\nimport React from \"react\";\nimport { FeatureCard, Header, SearchBar, SideBarOpen } from \"../../ctd-project-components\";\n\nclass ProjectDashBoard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectProject = id => {\n      const allProjects = this.state.projectData;\n      console.log(\"see\", id);\n      const selectedProject = allProjects.find(x => x.id === id);\n      console.log(selectedProject);\n      this.setState({\n        selectedProject\n      });\n    };\n\n    this.handleInput = e => {\n      console.log(e.target.value);\n      this.setState({\n        searchName: e.target.value\n      });\n    };\n\n    this.state = {\n      projectData: [],\n      searchName: \"\" // selectedProject: {}\n\n    };\n  }\n\n  componentDidMount() {\n    this.getAirTable();\n  }\n\n  getAirTable() {\n    const url = \"https://api.airtable.com/v0/appQSPi3XUdUMbM1m/Projects\";\n    fetch(url, {\n      headers: {\n        Authorization: \"Bearer \" + process.env.REACT_APP_AIRTABLE_KEY\n      }\n    }).then(response => response.json()).then(responseData => {\n      console.log(\"data from Airtable\", responseData);\n      const projectData = responseData.records;\n      console.log(\"projectData \", projectData);\n      this.setState({\n        projectData: projectData\n      });\n    });\n  }\n\n  render() {\n    // Filtering out the side bar Menu\n    let filterProject = this.state.projectData.filter(sideBarFilter => {\n      return sideBarFilter.fields.Name.toUpperCase().includes(this.state.searchName.toUpperCase());\n    });\n    return React.createElement(\"div\", {\n      className: \"view-container dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dashboard-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.selectedProject ? React.createElement(FeatureCard, {\n      project: this.state.selectedProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }) : null, this.state.projectData && React.createElement(SideBarOpen, {\n      projectData: this.state.projectData,\n      selectProject: this.selectProject,\n      filterProject: filterProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      projectData: this.state.projectData,\n      selectProject: this.selectProject,\n      handleInput: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ProjectDashBoard;","map":{"version":3,"sources":["/Users/nick/devedit/src/containers/ProjectDashBoard/index.js"],"names":["React","FeatureCard","Header","SearchBar","SideBarOpen","ProjectDashBoard","Component","constructor","props","selectProject","id","allProjects","state","projectData","console","log","selectedProject","find","x","setState","handleInput","e","target","value","searchName","componentDidMount","getAirTable","url","fetch","headers","Authorization","process","env","REACT_APP_AIRTABLE_KEY","then","response","json","responseData","records","render","filterProject","filter","sideBarFilter","fields","Name","toUpperCase","includes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  FeatureCard,\n  Header,\n  SearchBar,\n  SideBarOpen\n} from \"../../ctd-project-components\";\n\nclass ProjectDashBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectData: [],\n      searchName: \"\"\n      // selectedProject: {}\n    };\n  }\n  componentDidMount() {\n    this.getAirTable();\n  }\n\n  selectProject = id => {\n    const allProjects = this.state.projectData;\n    console.log(\"see\", id);\n    const selectedProject = allProjects.find(x => x.id === id);\n    console.log(selectedProject);\n    this.setState({\n      selectedProject\n    });\n  };\n\n  handleInput = e => {\n    console.log(e.target.value);\n    this.setState({\n      searchName: e.target.value\n    });\n  };\n\n  getAirTable() {\n    const url = \"https://api.airtable.com/v0/appQSPi3XUdUMbM1m/Projects\";\n\n    fetch(url, {\n      headers: { Authorization: \"Bearer \" + process.env.REACT_APP_AIRTABLE_KEY }\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        console.log(\"data from Airtable\", responseData);\n        const projectData = responseData.records;\n        console.log(\"projectData \", projectData);\n        this.setState({ projectData: projectData });\n      });\n  }\n\n  render() {\n    // Filtering out the side bar Menu\n    let filterProject = this.state.projectData.filter(sideBarFilter => {\n      return sideBarFilter.fields.Name.toUpperCase().includes(\n        this.state.searchName.toUpperCase()\n      );\n    });\n\n    return (\n      <div className=\"view-container dashboard\">\n        <div className=\"dashboard-content\">\n          {/* <div>\n            {/* {this.state.projectData && (\n              <Header\n                projectData={this.state.projectData}\n                selectProject={this.selectProject}\n              />\n            )} */}\n            {/*this.state.projectData && (\n              <SearchBar\n                projectData={this.state.projectData}\n                selectProject={this.selectProject}\n                handleInput={this.handleInput}\n              />\n            )}\n          </div> */}\n\n          {this.state.selectedProject ? (\n            <FeatureCard project={this.state.selectedProject} />\n          ) : null}\n\n          {this.state.projectData && (\n            <SideBarOpen\n              projectData={this.state.projectData}\n              selectProject={this.selectProject}\n              filterProject={filterProject}\n              >\n              <SearchBar\n                projectData={this.state.projectData}\n                selectProject={this.selectProject}\n                handleInput={this.handleInput}\n              />\n              </SideBarOpen>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectDashBoard;\n"]},"metadata":{},"sourceType":"module"}