{"ast":null,"code":"var _jsxFileName = \"/Users/nick/devedit/src/components/Comment/index.js\";\nimport React from \"react\";\nimport { compose } from \"recompose\";\nimport { AuthUserContext, withAuthorization, withEmailVerification } from \"../../components/Session\";\nimport { withFirebase } from \"../../components/Firebase\";\nimport ReplyComment from \"../ReplyComment\";\nimport AddReplys from \"../AddReplys\";\n\nconst moment = require(\"moment\");\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      const commentId = this.props.commentId; //console.log(\"this is commentId\", commentId);\n\n      this.unsubscribe = this.props.firebase.replys(commentId) //.where(\"commentId\", \"==\", commentId)\n      .onSnapshot(snapshot => {\n        const Replys = [];\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          Replys.push(data);\n        });\n        console.log(\"this is my replys using spesific commentId\", Replys);\n        this.setState({\n          replys: Replys\n        });\n        const totallCountReplys = Replys.length;\n        console.log(\"totalcountReplys\", totallCountReplys);\n        this.setState({\n          totallReplys: totallCountReplys\n        });\n      });\n    };\n\n    this.showMore = () => this.setState({\n      showAll: true\n    });\n\n    this.showLess = () => this.setState({\n      showAll: false\n    });\n\n    this.state = {\n      comments: [],\n      showAll: false,\n      replies: [],\n      // isOldestFirst: \"\",\n      commentId: \"\",\n      replys: [],\n      timeCreated: \"\",\n      totallReplys: 0\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          comment = _this$props.comment,\n          limited = _this$props.limited,\n          timeCreated = _this$props.timeCreated,\n          commentId = _this$props.commentId;\n    const showAll = this.state.showAll;\n    let commentContent = comment.comment; //  const { reply } = this.state;\n    // console.log(\"Here is your comment ID\", comment.commentId)\n\n    if (comment.comment && comment.comment.length <= limited) {\n      // console.log(\"IF\", comment.comment, comment.comment.length);\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, authUser => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"commentDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"styleDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, comment.timeCreated, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), comment.comment, \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(AddReplys, {\n        commentId: comment.commentId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(ReplyComment, {\n        replys: this.state.replys,\n        timeCreated: timeCreated,\n        commentID: comment.commentId,\n        comment: comment,\n        totallReplys: this.state.totallReplys,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })))))));\n    } else {\n      //  console.log(\"ELSE\", comment.comment, comment.comment.length);\n      if (showAll) {\n        return React.createElement(\"div\", {\n          className: \"card-comment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"commentDisplay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"styleDisplay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, comment.timeCreated, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }), comment.comment, React.createElement(\"a\", {\n          onClick: this.showLess,\n          style: {\n            color: \"darkblue\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Read less\"))));\n      }\n    } //console.log(\"this is commentContent\",commentContent)\n\n\n    const toShow = commentContent.slice(0, limited) + \"....\";\n\n    if (toShow) {\n      return React.createElement(\"div\", {\n        className: \"card-comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"commentDisplay \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"styleDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, comment.timeCreated, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), toShow, React.createElement(\"a\", {\n        onClick: this.showMore,\n        style: {\n          color: \"darkblue\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \" \", \"Read More\", \" \")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default compose(withFirebase)(Comment);","map":{"version":3,"sources":["/Users/nick/devedit/src/components/Comment/index.js"],"names":["React","compose","AuthUserContext","withAuthorization","withEmailVerification","withFirebase","ReplyComment","AddReplys","moment","require","Comment","Component","constructor","props","componentDidMount","commentId","unsubscribe","firebase","replys","onSnapshot","snapshot","Replys","forEach","doc","data","push","console","log","setState","totallCountReplys","length","totallReplys","showMore","showAll","showLess","state","comments","replies","timeCreated","render","comment","limited","commentContent","authUser","color","toShow","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { compose } from \"recompose\";\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification\n} from \"../../components/Session\";\nimport { withFirebase } from \"../../components/Firebase\";\nimport ReplyComment from \"../ReplyComment\";\nimport AddReplys from \"../AddReplys\";\nconst moment = require(\"moment\");\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      showAll: false,\n      replies: [],\n      // isOldestFirst: \"\",\n      commentId: \"\",\n      replys: [],\n      timeCreated: \"\",\n      totallReplys: 0\n    };\n  }\n\n  componentDidMount = () => {\n    const commentId = this.props.commentId;\n    //console.log(\"this is commentId\", commentId);\n    this.unsubscribe = this.props.firebase\n      .replys(commentId)\n      //.where(\"commentId\", \"==\", commentId)\n      .onSnapshot(snapshot => {\n        const Replys = [];\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          Replys.push(data);\n        });\n        console.log(\"this is my replys using spesific commentId\", Replys);\n        this.setState({ replys: Replys });\n        const totallCountReplys = Replys.length;\n        console.log(\"totalcountReplys\", totallCountReplys);\n        this.setState({ totallReplys: totallCountReplys });\n      });\n  };\n\n  showMore = () => this.setState({ showAll: true });\n  showLess = () => this.setState({ showAll: false });\n\n  render() {\n    const { comment, limited, timeCreated, commentId } = this.props;\n    const { showAll } = this.state;\n    let commentContent = comment.comment;\n    //  const { reply } = this.state;\n    // console.log(\"Here is your comment ID\", comment.commentId)\n\n    if (comment.comment && comment.comment.length <= limited) {\n      // console.log(\"IF\", comment.comment, comment.comment.length);\n      return (\n        <AuthUserContext.Consumer>\n          {authUser => (\n            <div>\n              <div>\n                <div className=\"commentDisplay\">\n                  <p className=\"styleDisplay\">\n                    {comment.timeCreated} <br />\n                    {comment.comment}{\" \"}\n                  </p>\n\n                  <div>\n                    <AddReplys commentId={comment.commentId} />\n\n                    <div>\n                      <ReplyComment\n                        replys={this.state.replys}\n                        timeCreated={timeCreated}\n                        commentID={comment.commentId}\n                        comment={comment}\n                        totallReplys={this.state.totallReplys}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </AuthUserContext.Consumer>\n      );\n    } else {\n      //  console.log(\"ELSE\", comment.comment, comment.comment.length);\n\n      if (showAll) {\n        return (\n          <div className=\"card-comment\">\n            <div className=\"commentDisplay\">\n              <p className=\"styleDisplay\">\n                {comment.timeCreated} <br />\n                {comment.comment}\n                <a onClick={this.showLess} style={{ color: \"darkblue\" }}>\n                  Read less\n                </a>\n              </p>\n            </div>\n          </div>\n        );\n      }\n    }\n    //console.log(\"this is commentContent\",commentContent)\n    const toShow = commentContent.slice(0, limited) + \"....\";\n\n    if (toShow) {\n      return (\n        <div className=\"card-comment\">\n          <div className=\"commentDisplay \">\n            <p className=\"styleDisplay\">\n              {comment.timeCreated} <br />\n              {toShow}\n              <a onClick={this.showMore} style={{ color: \"darkblue\" }}>\n                {\" \"}\n                Read More{\" \"}\n              </a>\n            </p>\n            <br />\n          </div>\n        </div>\n      );\n    }\n  }\n}\nexport default compose(withFirebase)(Comment);\n"]},"metadata":{},"sourceType":"module"}