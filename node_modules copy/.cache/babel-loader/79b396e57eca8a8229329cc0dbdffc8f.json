{"ast":null,"code":"import _objectSpread from \"/Users/nick/devedit/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/nick/devedit/src/containers/IndividualView/index.js\";\nimport React, { Fragment } from \"react\";\nimport AddComment from \"../../components/CommentSystem/AddComment\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { withFirebase } from \"../../components/Firebase\";\nimport Comment from \"../../components/Comment\";\nimport ListItem1 from \"../../components/ListItem1\";\nimport Comments from \"../../components/Comments/comments\";\n\nconst moment = require(\"moment\");\n\nclass IndividualView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      let articleId = this.props.match.params.articleId;\n      this.unsubscribe = this.props.firebase.comments().where(\"articleId\", \"==\", articleId) //.orderBy('timeCreated','desc')\n      .limit(8).onSnapshot(snapshot => {\n        const comments = [];\n        let commentId = \"\";\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          commentId = doc.id; // console.log(\"new commentId\",commentId)\n\n          data.commentId = commentId;\n          comments.push(data);\n          console.log(\"comments have posted\", comments);\n          this.setState({\n            commentId: commentId,\n            comments: comments\n          });\n        });\n      }); //get the ID for a particular article\n      // console.log(\"articleId\", this.props.match.params);\n\n      this.setState({\n        articleId\n      });\n      this.unsubscribe = this.props.firebase.article(articleId).onSnapshot(doc => {\n        if (doc.exists) {\n          // console.log(\" this is my article\", doc.data());\n          this.setState({\n            article: doc.data()\n          });\n          this.setState({\n            timeCreated: moment().format(\" MMMM DD, YYYY  --  hh:mm:ss A  \")\n          }); // set data to local state\n          // console.log(\"this is a state article:\" , this.state.article)\n        } else {\n          console.log(\"No such document!\");\n        }\n\n        let autherId = this.state.article.userId; //console.log(\"autherId of  acomment\",autherId)\n\n        this.unsubscribe = this.props.firebase.user(autherId).get().then(doc => {\n          // console.log(\"userdata\", doc.data())\n          let user = doc.data();\n          this.setState({\n            username: user.username,\n            photoUrl: user.photoUrl\n          });\n        });\n      }); //This Helps to find the total commets for spesific articleId\n\n      this.unsubscribe = this.props.firebase.comments().where(\"articleId\", \"==\", articleId).onSnapshot(snapshot => {\n        const TotallComment = [];\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          TotallComment.push(data); //console.log(\"totall cimment at individual\",TotallComment)\n        });\n        this.setState({\n          TotallComment: TotallComment\n        });\n        const totalcount = TotallComment.length;\n        this.setState({\n          totalcount: totalcount\n        });\n      });\n    };\n\n    this.createComment = (comment, article) => {\n      //  console.log(\"here create comment\", comment, this.state.articleId);\n      this.props.firebase.comments().add(_objectSpread({}, comment, {\n        articleId: this.state.articleId\n      })).then(function (docRef) {//console.log(\"Document written with ID: \", docRef.id);\n      });\n    };\n\n    this.state = {\n      comments: null,\n      limit: \"\",\n      limited: 450,\n      TotallComment: \"\",\n      totalcount: \"\",\n      isOldestFirst: true,\n      commentId: \"\",\n      username: \"\",\n      sortType: \"asc\",\n      commentList: [],\n      childCommentId: \"\",\n      parentCommentId: \"\",\n      photoUrl: \" \"\n    };\n  }\n\n  /* createChildComment = (reply, article) => {\n     let {commentId,childCommentId}=this.state.commentId\n  // console.log(\"here create commentId\", this.state.commentId );\n     this.props.firebase\n       .comments()\n       .add({\n         ...reply,\n         parentCommentId: this.state.commentId\n       })\n       //.then(function(docRef) {\n         //console.log(\"Document written with ID: \", docRef.id);\n       //});\n       .then(docRef => {\n         this.setState({childCommentId:docRef.id,\n           parentCommentId:docRef.parentCommentId\n         })\n         console.log('ChildCommentId', this.state.childCommentId)\n        // console.log('ParentommentId', this.state.parentCommentId)\n         this.props.firebase.comment(this.state.commentId).update({\n          \n           childCommentId: docRef.id\n        //console.log(\" this is the replysID \", )\n         //console.log(\" this is the replysID \", docRef.id)\n       });\n     });\n   };\n  /* createChildComment = (reply, article) => {\n     let { commentId, childCommentId } = this.state.commentId;\n     // console.log(\"here create commentId\", this.state.commentId );\n     this.props.firebase\n       .comments()\n       .add({\n         ...reply,\n         parentCommentId: this.state.commentId\n       })\n       //.then(function(docRef) {\n       //console.log(\"Document written with ID: \", docRef.id);\n       //});\n       .then(docRef => {\n         \n         this.setState({\n           childCommentId: docRef.id,\n           \n           parentCommentId: docRef.parentCommentId\n         });\n         console.log(\"My ChildCommentId\", this.state.childCommentId);\n         console.log(\"My ParentommentId\", this.state.parentCommentId);\n         this.props.firebase.comment(this.state.commentId).update({\n           childCommentId: docRef.id\n           //console.log(\" this is the replysID \", )\n           //console.log(\" this is the replysID \", docRef.id)\n         });\n       });\n   };*/\n  render() {\n    // Access to local component state\n    const _this$state = this.state,\n          article = _this$state.article,\n          comment = _this$state.comment,\n          comments = _this$state.comments,\n          timeCreated = _this$state.timeCreated,\n          articleId = _this$state.articleId,\n          limited = _this$state.limited,\n          sortType = _this$state.sortType,\n          commentId = _this$state.commentId;\n\n    if (comments) {\n      comments.sort((a, b) => {\n        const isReversed = sortType === \"desc\" ? 1 : -1;\n        return isReversed * a.timeCreated.localeCompare(b.timeCreated);\n      }); //console.log(\"sortedComment\",sortedcomments)\n    }\n\n    if (article) {\n      return React.createElement(\"div\", {\n        className: \"container-individual \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-individual\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(ListItem1, {\n        article: article,\n        isIndividualView: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"auther-name-individual\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"autherstyle-individual\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: this.state.photoUrl,\n        className: \"user-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, this.state.username, \" \", \" \", article.timeCreated))), React.createElement(\"div\", {\n        className: \"grid-subject2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: article.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, article.title)), React.createElement(\"div\", {\n        className: \"grid-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, article.description)), React.createElement(\"div\", {\n        className: \"stylebutton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          justifyContent: \"spacebitween\"\n        },\n        type: \"button\" //onClick={this.handleSubmit}\n        ,\n        className: \"disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-comment-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \" \"), \" \", this.state.totalcount, \" \", \"Comment\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleRemove,\n        className: \"disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Save\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Comments, {\n        comments: comments,\n        comment: comment,\n        onCreate: this.createComment,\n        articleId: articleId,\n        commentId: commentId,\n        onCreateChild: this.createChildComment,\n        childCommentId: this.state.childCommentId,\n        parentCommentId: this.state.parentCommentId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      })));\n    } else {\n      console.log(\"no article\");\n      return null;\n    }\n  }\n\n}\n\nexport default compose(withFirebase, withRouter)(IndividualView);","map":{"version":3,"sources":["/Users/nick/devedit/src/containers/IndividualView/index.js"],"names":["React","Fragment","AddComment","withRouter","compose","withFirebase","Comment","ListItem1","Comments","moment","require","IndividualView","Component","constructor","props","componentDidMount","articleId","match","params","unsubscribe","firebase","comments","where","limit","onSnapshot","snapshot","commentId","forEach","doc","data","id","push","console","log","setState","article","exists","timeCreated","format","autherId","state","userId","user","get","then","username","photoUrl","TotallComment","totalcount","length","createComment","comment","add","docRef","limited","isOldestFirst","sortType","commentList","childCommentId","parentCommentId","render","sort","a","b","isReversed","localeCompare","url","title","description","justifyContent","handleRemove","createChildComment"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport AddComment from \"../../components/CommentSystem/AddComment\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { withFirebase } from \"../../components/Firebase\";\nimport Comment from \"../../components/Comment\";\nimport ListItem1 from \"../../components/ListItem1\";\nimport Comments from \"../../components/Comments/comments\";\nconst moment = require(\"moment\");\nclass IndividualView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: null,\n      limit: \"\",\n      limited: 450,\n      TotallComment: \"\",\n      totalcount: \"\",\n      isOldestFirst: true,\n      commentId: \"\",\n      username: \"\",\n      sortType: \"asc\",\n      commentList: [],\n      childCommentId: \"\",\n      parentCommentId: \"\",\n      photoUrl: \" \",\n    };\n  }\n\n  componentDidMount = () => {\n    let articleId = this.props.match.params.articleId;\n    this.unsubscribe = this.props.firebase\n      .comments()\n\n      .where(\"articleId\", \"==\", articleId)\n\n      //.orderBy('timeCreated','desc')\n      .limit(8)\n\n      .onSnapshot(snapshot => {\n        const comments = [];\n        let commentId = \"\";\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          commentId = doc.id;\n         // console.log(\"new commentId\",commentId)\n          data.commentId = commentId;\n          comments.push(data);\n         console.log(\"comments have posted\",comments)\n          this.setState({\n            commentId: commentId,\n            comments: comments\n          });\n        });\n      });\n\n    //get the ID for a particular article\n    // console.log(\"articleId\", this.props.match.params);\n    this.setState({ articleId });\n\n    this.unsubscribe = this.props.firebase\n      .article(articleId)\n\n      .onSnapshot(doc => {\n        if (doc.exists) {\n          // console.log(\" this is my article\", doc.data());\n          this.setState({\n            article: doc.data()\n          });\n          this.setState({\n            timeCreated: moment().format(` MMMM DD, YYYY  --  hh:mm:ss A  `)\n          }); // set data to local state\n          // console.log(\"this is a state article:\" , this.state.article)\n        } else {\n          console.log(\"No such document!\");\n        }\n\n        let autherId = this.state.article.userId;\n        //console.log(\"autherId of  acomment\",autherId)\n        this.unsubscribe = this.props.firebase\n          .user(autherId)\n          .get()\n          .then(doc => {\n            // console.log(\"userdata\", doc.data())\n            let user = doc.data();\n            this.setState({ \n              username: user.username,\n              photoUrl: user.photoUrl\n             });\n          });\n      });\n    //This Helps to find the total commets for spesific articleId\n    this.unsubscribe = this.props.firebase\n      .comments()\n      .where(\"articleId\", \"==\", articleId)\n      .onSnapshot(snapshot => {\n        const TotallComment = [];\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          TotallComment.push(data);\n          //console.log(\"totall cimment at individual\",TotallComment)\n        });\n\n        this.setState({ TotallComment: TotallComment });\n        const totalcount = TotallComment.length;\n        this.setState({ totalcount: totalcount });\n      });\n  };\n\n  createComment = (comment, article) => {\n    //  console.log(\"here create comment\", comment, this.state.articleId);\n    this.props.firebase\n      .comments()\n      .add({\n        ...comment,\n        articleId: this.state.articleId\n      })\n      .then(function(docRef) {\n        //console.log(\"Document written with ID: \", docRef.id);\n      });\n  };\n  \n /* createChildComment = (reply, article) => {\n    let {commentId,childCommentId}=this.state.commentId\n // console.log(\"here create commentId\", this.state.commentId );\n    this.props.firebase\n      .comments()\n      .add({\n        ...reply,\n        parentCommentId: this.state.commentId\n      })\n      //.then(function(docRef) {\n        //console.log(\"Document written with ID: \", docRef.id);\n      //});\n      .then(docRef => {\n        this.setState({childCommentId:docRef.id,\n          parentCommentId:docRef.parentCommentId\n        })\n        console.log('ChildCommentId', this.state.childCommentId)\n       // console.log('ParentommentId', this.state.parentCommentId)\n        this.props.firebase.comment(this.state.commentId).update({\n         \n          childCommentId: docRef.id\n       //console.log(\" this is the replysID \", )\n        //console.log(\" this is the replysID \", docRef.id)\n      });\n    });\n  };\n /* createChildComment = (reply, article) => {\n    let { commentId, childCommentId } = this.state.commentId;\n    // console.log(\"here create commentId\", this.state.commentId );\n    this.props.firebase\n      .comments()\n      .add({\n        ...reply,\n        parentCommentId: this.state.commentId\n      })\n      //.then(function(docRef) {\n      //console.log(\"Document written with ID: \", docRef.id);\n      //});\n      .then(docRef => {\n        \n        this.setState({\n          childCommentId: docRef.id,\n          \n          parentCommentId: docRef.parentCommentId\n        });\n        console.log(\"My ChildCommentId\", this.state.childCommentId);\n        console.log(\"My ParentommentId\", this.state.parentCommentId);\n        this.props.firebase.comment(this.state.commentId).update({\n          childCommentId: docRef.id\n          //console.log(\" this is the replysID \", )\n          //console.log(\" this is the replysID \", docRef.id)\n        });\n      });\n  };*/\n\n  render() {\n    // Access to local component state\n    const {\n      article,\n      comment,\n      comments,\n      timeCreated,\n      articleId,\n      limited,\n      sortType,\n      commentId\n    } = this.state;\n\n    if (comments) {\n      comments.sort((a, b) => {\n        const isReversed = sortType === \"desc\" ? 1 : -1;\n        return isReversed * a.timeCreated.localeCompare(b.timeCreated);\n      });\n      //console.log(\"sortedComment\",sortedcomments)\n    }\n\n    if (article) {\n      return (\n        <div className=\"container-individual \">\n          <div className=\"card-individual\">\n            <ListItem1 article={article} isIndividualView={true} />\n\n            <div className=\"auther-name-individual\">\n              <div className=\"autherstyle-individual\">\n                <span /><img src={this.state.photoUrl} className=\"user-profile\" />{\" \"}\n                <span>\n                   {this.state.username} {} {article.timeCreated}\n                </span>\n              </div>\n            </div>\n\n            <div className=\"grid-subject2\">\n              <a href={article.url}>{article.title}</a>\n            </div>\n\n            <div className=\"grid-description\">\n              <p>{article.description}</p>\n            </div>\n\n            <div className=\"stylebutton\">\n              <button\n                style={{ justifyContent: \"spacebitween\" }}\n                type=\"button\"\n                //onClick={this.handleSubmit}\n                className=\"disabled\"\n              >\n                <i className=\"fa fa-comment-alt\"> </i> {this.state.totalcount}{\" \"}\n                Comment\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.handleRemove}\n                className=\"disabled\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n          {/*}\n          <div>\n            <AddComment comment={comment} onCreate={this.createComment} />\n          </div>\n          <div>\n         {this.state.comments &&\n              this.state.comments.map((comment, index) => {\n                \n                return (\n                  <div className=\"card-comment\">\n                    <Comment\n                      comment={comment}\n                      key={index}\n                      limited={limited}\n                      timeCreated={timeCreated}\n                      commentId={comment.commentId}\n                      \n                    />\n                   \n                  </div>\n                );\n              })}\n          </div>*/}\n          <div>\n            <Comments\n              comments={comments}\n              comment={comment}\n              onCreate={this.createComment}\n              articleId={articleId}\n              commentId={commentId}\n              onCreateChild={this.createChildComment}\n              childCommentId={this.state.childCommentId}\n              parentCommentId={this.state.parentCommentId}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      console.log(\"no article\");\n      return null;\n    }\n  }\n}\n\nexport default compose(withFirebase, withRouter)(IndividualView);"]},"metadata":{},"sourceType":"module"}