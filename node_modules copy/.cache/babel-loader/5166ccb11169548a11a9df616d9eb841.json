{"ast":null,"code":"var _jsxFileName = \"/Users/nick/devedit/src/components/CommentSystem/AddComment.js\";\nimport React from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport * as ROUTES from \"../../constants/routes\";\nimport { AuthUserContext } from \"../Session\";\n\nconst moment = require(\"moment\");\n\nclass AddComment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentdidMount = () => {\n      //create reference to comments in firebase database\n      this.unsubscribe = this.props.firebase.comments().orderBy(\"timeCreated\").limit(5); //console.log(\"Here is my comments refrence\", this.unsubscribe);\n    };\n\n    this.handleChange = (e, authUser) => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value,\n        timeCreated: moment().format(\" MMMM DD, YYYY  --  hh:mm:ss A \"),\n        userId: authUser.uid\n      });\n    };\n\n    this.handleSubmit = (e, authUser) => {\n      e.preventDefault();\n      this.props.onCreate(this.state);\n      this.setState({\n        comment: \"\"\n      });\n    };\n\n    this.state = {\n      timeCreated: \"\",\n      comment: \"\",\n      limit: 5,\n      userId: \"\"\n    };\n  }\n\n  render() {\n    const comment = this.state.comment;\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, authUser => React.createElement(\"form\", {\n      className: \"card-addcomment\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"commentgrid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"commentContent\",\n      id: \"comment\",\n      type: \"text\",\n      value: comment,\n      name: \"comment\",\n      placeholder: \"Write your comment here! \",\n      autoFocus: true,\n      onChange: e => this.handleChange(e, authUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit-btn\",\n      type: \"submit\",\n      value: \" Comment\",\n      disabled: !this.state.comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Comment\"))));\n  }\n\n}\n\nexport default compose(withFirebase, withRouter)(AddComment);","map":{"version":3,"sources":["/Users/nick/devedit/src/components/CommentSystem/AddComment.js"],"names":["React","withFirebase","withRouter","compose","ROUTES","AuthUserContext","moment","require","AddComment","Component","constructor","props","componentdidMount","unsubscribe","firebase","comments","orderBy","limit","handleChange","e","authUser","target","name","value","setState","timeCreated","format","userId","uid","handleSubmit","preventDefault","onCreate","state","comment","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;AACA,SAASC,eAAT,QAAgC,YAAhC;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,iBAVmB,GAUC,MAAM;AACxB;AACA,WAAKC,WAAL,GAAmB,KAAKF,KAAL,CAAWG,QAAX,CAChBC,QADgB,GAEhBC,OAFgB,CAER,aAFQ,EAGhBC,KAHgB,CAGV,CAHU,CAAnB,CAFwB,CAMxB;AACD,KAjBkB;;AAAA,SAmBnBC,YAnBmB,GAmBL,CAACC,CAAD,EAAGC,QAAH,KAAgB;AAAA,wBACJD,CAAC,CAACE,MADE;AAAA,YACpBC,IADoB,aACpBA,IADoB;AAAA,YACdC,KADc,aACdA,KADc;AAE5B,WAAKC,QAAL,CAAc;AACZ,SAACF,IAAD,GAAQC,KADI;AAEZE,QAAAA,WAAW,EAAEnB,MAAM,GAAGoB,MAAT,mCAFD;AAGZC,QAAAA,MAAM,EAAEP,QAAQ,CAACQ;AAHL,OAAd;AAKD,KA1BkB;;AAAA,SA4BnBC,YA5BmB,GA4BJ,CAACV,CAAD,EAAGC,QAAH,KAAgB;AAC7BD,MAAAA,CAAC,CAACW,cAAF;AAEA,WAAKnB,KAAL,CAAWoB,QAAX,CAAoB,KAAKC,KAAzB;AACA,WAAKR,QAAL,CAAc;AAAES,QAAAA,OAAO,EAAE;AAAX,OAAd;AAGD,KAnCkB;;AAEjB,SAAKD,KAAL,GAAa;AACXP,MAAAA,WAAW,EAAE,EADF;AAEXQ,MAAAA,OAAO,EAAE,EAFE;AAGXhB,MAAAA,KAAK,EAAE,CAHI;AAIXU,MAAAA,MAAM,EAAC;AAJI,KAAb;AAMD;;AA8BDO,EAAAA,MAAM,GAAG;AAAA,UACCD,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAEP,WACE,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGb,QAAQ,IACX;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAkC,MAAA,QAAQ,EAAE,KAAKS,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,EAAE,EAAC,SAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIC,MAAA,KAAK,EAAEI,OAJR;AAKE,MAAA,IAAI,EAAC,SALP;AAME,MAAA,WAAW,EAAC,2BANd;AAOE,MAAA,SAAS,EAAE,IAPb;AAQE,MAAA,QAAQ,EAAEd,CAAC,IAAE,KAAKD,YAAL,CAAkBC,CAAlB,EAAoBC,QAApB,CARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAcE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,QAAQ,EAAE,CAAC,KAAKY,KAAL,CAAWC,OAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdF,CADF,CAFA,CADF;AA+BD;;AAxEsC;;AA2EzC,eAAe9B,OAAO,CAACF,YAAD,EAAeC,UAAf,CAAP,CAAkCM,UAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport * as ROUTES from \"../../constants/routes\";\nimport { AuthUserContext } from \"../Session\";\nconst moment = require(\"moment\");\nclass AddComment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeCreated: \"\",\n      comment: \"\",\n      limit: 5,\n      userId:\"\"\n    };\n  }\n\n  componentdidMount = () => {\n    //create reference to comments in firebase database\n    this.unsubscribe = this.props.firebase\n      .comments()\n      .orderBy(\"timeCreated\")\n      .limit(5);\n    //console.log(\"Here is my comments refrence\", this.unsubscribe);\n  };\n\n  handleChange =(e,authUser) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n      timeCreated: moment().format(` MMMM DD, YYYY  --  hh:mm:ss A `),\n      userId: authUser.uid\n    });\n  };\n\n  handleSubmit = (e,authUser) => {\n    e.preventDefault();\n\n    this.props.onCreate(this.state)\n    this.setState({ comment: \"\" ,\n  \n  });\n  };\n\n \n  render() {\n    const { comment } = this.state;\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n      <form className=\"card-addcomment\" onSubmit={this.handleSubmit}>\n        <div className=\"commentgrid\">\n        \n            <textarea\n              className=\"commentContent\"\n              id=\"comment\"\n              type=\"text\"\n             value={comment}\n              name=\"comment\"\n              placeholder=\"Write your comment here! \"\n              autoFocus={true}\n              onChange={e=>this.handleChange(e,authUser)}\n            ></textarea>\n         \n\n          <button\n            className=\"submit-btn\"\n            type=\"submit\"\n            value=\" Comment\"\n            disabled={!this.state.comment}\n          >\n            Comment\n          </button>\n        </div>\n      </form>\n        )}\n        </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default compose(withFirebase, withRouter)(AddComment);\n"]},"metadata":{},"sourceType":"module"}