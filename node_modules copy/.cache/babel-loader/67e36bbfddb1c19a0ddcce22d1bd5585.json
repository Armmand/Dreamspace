{"ast":null,"code":"var _jsxFileName = \"/Users/nick/devedit/src/containers/Directory/index.js\";\nimport React from 'react';\nimport DirectorySearchBar from '../../ctd-project-components/DirectorySearchBar';\nimport DirectoryList from '../../ctd-project-components/DirectoryList';\n\nclass Directory extends React.Component {\n  constructor() {\n    super();\n\n    this.selectedStaffMember = id => {\n      const allStaffMember = this.state.crewDirectory;\n      console.log(\"see\", id);\n      this.setState({\n        isFlipped: id\n      }); // const selectStaffMember = allStaffMember.find(x => x.id === id);\n      // console.log(selectStaffMember);\n      // if(this.handleClick()) {\n      //   this.setState({selectStaffMember});\n      // }\n    };\n\n    this.filterDirectory = searchTerm => {\n      console.log('searchTerm ', searchTerm);\n      let directory = this.state.allDirectory;\n      const formattedSearch = searchTerm.toLowerCase();\n      console.log(directory);\n      const results = directory.filter(person => {\n        console.log(person);\n        let grabData = (person.fields.Name + person.fields.Phone + person.fields['Email Address']).replace(/[^a-zA-Z0-9]/g, \"\").toLowerCase();\n        return grabData.indexOf(formattedSearch) > -1;\n      });\n      console.log(results);\n      this.setState({\n        crewDirectory: results\n      });\n    };\n\n    this.state = {\n      crewDirectory: [],\n      searchDirectory: \"\",\n      isFlipped: false,\n      cardId: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isFlipped: !prevState.isFlipped\n    }));\n  }\n\n  componentDidMount() {\n    this.directoryAirTable();\n    this.projectAirTable();\n  }\n\n  directoryAirTable() {\n    const url = \"https://api.airtable.com/v0/appBu5I7tEJENCp45/Employee%20directory\";\n    fetch(url, {\n      headers: {\n        Authorization: \"Bearer \" + process.env.REACT_APP_DIRECTORY_AIRTABLE_KEY\n      }\n    }).then(response => response.json()).then(responseData => {\n      console.log(\"directory data \", responseData);\n      const crewDirectory = responseData.records;\n      console.log(\"crewDirectory \", crewDirectory);\n      this.setState({\n        crewDirectory: crewDirectory,\n        allDirectory: crewDirectory\n      });\n    });\n  }\n\n  projectAirTable() {\n    const url = \"https://api.airtable.com/v0/appQSPi3XUdUMbM1m/Projects\";\n    fetch(url, {\n      headers: {\n        Authorization: \"Bearer \" + process.env.REACT_APP_AIRTABLE_KEY\n      }\n    }).then(response => response.json()).then(responseData => {\n      console.log(\"data from Airtable\", responseData);\n      const projectData = responseData.records;\n      console.log(\"projectData \", projectData);\n      this.setState({\n        projectData: projectData\n      });\n    });\n  }\n\n  render() {\n    // let flipIndividually = \n    return React.createElement(\"div\", {\n      className: \"directory-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.crewDirectory && React.createElement(DirectorySearchBar, {\n      crewDirectory: this.state.crewDirectory,\n      selectedStaffMember: this.selectedStaffMember,\n      handleInput: this.handleInput,\n      filterDirectory: this.filterDirectory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), this.state.crewDirectory && React.createElement(DirectoryList, {\n      crewDirectory: this.state.crewDirectory,\n      selectedStaffMember: this.selectedStaffMember,\n      projectData: this.state.projectData,\n      isFlipped: this.state.isFlipped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Directory;","map":{"version":3,"sources":["/Users/nick/devedit/src/containers/Directory/index.js"],"names":["React","DirectorySearchBar","DirectoryList","Directory","Component","constructor","selectedStaffMember","id","allStaffMember","state","crewDirectory","console","log","setState","isFlipped","filterDirectory","searchTerm","directory","allDirectory","formattedSearch","toLowerCase","results","filter","person","grabData","fields","Name","Phone","replace","indexOf","searchDirectory","cardId","handleClick","bind","prevState","componentDidMount","directoryAirTable","projectAirTable","url","fetch","headers","Authorization","process","env","REACT_APP_DIRECTORY_AIRTABLE_KEY","then","response","json","responseData","records","REACT_APP_AIRTABLE_KEY","projectData","render","handleInput"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DirectorySearchBar from '../../ctd-project-components/DirectorySearchBar';\nimport DirectoryList from '../../ctd-project-components/DirectoryList';\n\nclass Directory extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      crewDirectory: [],\n      searchDirectory: \"\",\n      isFlipped: false,\n      cardId: [],\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  \n  \n  handleClick() {\n    this.setState(prevState => ({isFlipped: !prevState.isFlipped}));\n  }\n   \n  componentDidMount() {\n    this.directoryAirTable();\n    this.projectAirTable();\n  }\n\n  selectedStaffMember = id => {\n    const allStaffMember = this.state.crewDirectory;\n    console.log(\"see\", id);\n    \n\n      this.setState ({isFlipped: id});\n    \n    // const selectStaffMember = allStaffMember.find(x => x.id === id);\n    // console.log(selectStaffMember);\n    // if(this.handleClick()) {\n    //   this.setState({selectStaffMember});\n    // }\n  };\n  \n  directoryAirTable() {\n    const url = \"https://api.airtable.com/v0/appBu5I7tEJENCp45/Employee%20directory\";\n      fetch(url, {\n        headers: { Authorization: \"Bearer \" + process.env.REACT_APP_DIRECTORY_AIRTABLE_KEY  }\n      })\n      .then(response => response.json())\n      .then(responseData => {\n        console.log(\"directory data \", responseData);\n        const crewDirectory = responseData.records;\n        console.log(\"crewDirectory \", crewDirectory);\n        this.setState({\n          crewDirectory: crewDirectory, \n          allDirectory: crewDirectory,\n        })\n\n      });\n    }\n    projectAirTable() {\n      const url = \"https://api.airtable.com/v0/appQSPi3XUdUMbM1m/Projects\";\n      fetch(url, {\n        headers: { Authorization: \"Bearer \" + process.env.REACT_APP_AIRTABLE_KEY }\n      })\n        .then(response => response.json())\n        .then(responseData => {\n          console.log(\"data from Airtable\", responseData);\n          const projectData = responseData.records;\n          console.log(\"projectData \", projectData);\n          this.setState({ projectData: projectData});\n        });\n      }\n\n  filterDirectory = searchTerm => {\n    console.log('searchTerm ', searchTerm)\n    let directory = this.state.allDirectory;\n    const formattedSearch = searchTerm.toLowerCase();\n    console.log(directory)\n    \n    const results = directory.filter(person => {\n      console.log(person)\n      let grabData = (\n        person.fields.Name +\n        person.fields.Phone +\n        person.fields['Email Address']\n      )\n      .replace(/[^a-zA-Z0-9]/g, \"\")\n      .toLowerCase();\n      return grabData.indexOf(formattedSearch) > -1;\n    })\n    console.log(results)\n    this.setState({ crewDirectory: results })\n    }\n  render() {\n      // let flipIndividually = \n    return(\n      <div className = 'directory-container'>\n        {this.state.crewDirectory && (<DirectorySearchBar \n          crewDirectory={this.state.crewDirectory}\n          selectedStaffMember={this.selectedStaffMember}\n          handleInput={this.handleInput}\n          filterDirectory={this.filterDirectory}\n        />\n        )}\n        {this.state.crewDirectory && (<DirectoryList \n          crewDirectory={this.state.crewDirectory}\n          selectedStaffMember={this.selectedStaffMember}\n          projectData={this.state.projectData}\n          isFlipped={this.state.isFlipped}\n        />)}\n     </div>\n   \n    )\n    \n  }\n}\n\nexport default Directory \n  "]},"metadata":{},"sourceType":"module"}