{"ast":null,"code":"var _jsxFileName = \"/Users/nick/devedit/src/components/SignIn/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => React.createElement(\"div\", {\n  className: \"wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"btn-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"b\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"Sign in with google\")), React.createElement(SignInGoogle, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), React.createElement(SignUpLink, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/account-exists-with-different-credential';\nconst ERROR_MSG_ACCOUNT_EXISTS = \"\\n  An account with an E-Mail address to\\n  this social account already exists. Try to login from\\n  this account instead and associate your social accounts on\\n  your personal account page.\\n\";\n/*class SignInFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <div className=\"view-container\">\n                <form onSubmit={this.onSubmit} className=\"devedit-form\">\n                    <fieldset>\n                        <input\n                            name=\"email\"\n                            value={email}\n                            onChange={this.onChange}\n                            type=\"text\"\n                            placeholder=\"Email Address\"\n                        />\n                        <input\n                            name=\"password\"\n                            value={password}\n                            onChange={this.onChange}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                        <button className=\"button-tertiary\" disabled={isInvalid} type=\"submit\">\n                            Sign In\n        </button>\n\n                        {error && <p>{error.message}</p>}\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}*/\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      this.props.firebase.doSignInWithGoogle().then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          photoUrl: socialAuthUser.user.photoURL,\n          email: socialAuthUser.user.email,\n          roles: {}\n        }, {\n          merge: true\n        });\n      }).then(() => {\n        this.setState({\n          error: null\n        });\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      error: null\n    };\n  }\n\n  render() {\n    const error = this.state.error;\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Sign In with Google\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, error.message));\n  }\n\n} // class SignInFacebookBase extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { error: null };\n//   }\n//   onSubmit = event => {\n//     this.props.firebase\n//       .doSignInWithFacebook()\n//       .then(socialAuthUser => {\n//         // Create a user in your Firebase Realtime Database too\n//         return this.props.firebase.user(socialAuthUser.user.uid).set(\n//           {\n//             username: socialAuthUser.additionalUserInfo.profile.name,\n//             email: socialAuthUser.additionalUserInfo.profile.email,\n//             roles: {},\n//           },\n//           { merge: true },\n//         );\n//       })\n//       .then(() => {\n//         this.setState({ error: null });\n//         this.props.history.push(ROUTES.HOME);\n//       })\n//       .catch(error => {\n//         if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n//           error.message = ERROR_MSG_ACCOUNT_EXISTS;\n//         }\n//         this.setState({ error });\n//       });\n//     event.preventDefault();\n//   };\n//   render() {\n//     const { error } = this.state;\n//     return (\n//       <form onSubmit={this.onSubmit}>\n//         <button type=\"submit\">Sign In with Facebook</button>\n//         {error && <p>{error.message}</p>}\n//       </form>\n//     );\n//   }\n// }\n// class SignInTwitterBase extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { error: null };\n//   }\n//   onSubmit = event => {\n//     this.props.firebase\n//       .doSignInWithTwitter()\n//       .then(socialAuthUser => {\n//         // Create a user in your Firebase Realtime Database too\n//         return this.props.firebase.user(socialAuthUser.user.uid).set(\n//           {\n//             username: socialAuthUser.additionalUserInfo.profile.name,\n//             email: socialAuthUser.additionalUserInfo.profile.email,\n//             roles: {},\n//           },\n//           { merge: true },\n//         );\n//       })\n//       .then(() => {\n//         this.setState({ error: null });\n//         this.props.history.push(ROUTES.HOME);\n//       })\n//       .catch(error => {\n//         if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n//           error.message = ERROR_MSG_ACCOUNT_EXISTS;\n//         }\n//         this.setState({ error });\n//       });\n//     event.preventDefault();\n//   };\n//   render() {\n//     const { error } = this.state;\n//     return (\n//       <form onSubmit={this.onSubmit}>\n//         <button type=\"submit\">Sign In with Twitter</button>\n//         {error && <p>{error.message}</p>}\n//       </form>\n//     );\n//   }\n// }\n\n/*const SignInForm = compose(\n    withRouter,\n    withFirebase,\n)(SignInFormBase);*/\n\n\nconst SignInGoogle = compose(withRouter, withFirebase)(SignInGoogleBase); // const SignInFacebook = compose(\n//   withRouter,\n//   withFirebase,\n// )(SignInFacebookBase);\n// const SignInTwitter = compose(\n//   withRouter,\n//   withFirebase,\n// )(SignInTwitterBase);\n\nexport default SignInPage;\nexport { SignInGoogle };","map":{"version":3,"sources":["/Users/nick/devedit/src/components/SignIn/index.js"],"names":["React","Component","withRouter","compose","SignUpLink","PasswordForgetLink","withFirebase","ROUTES","SignInPage","INITIAL_STATE","email","password","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignInGoogleBase","constructor","props","onSubmit","event","firebase","doSignInWithGoogle","then","socialAuthUser","user","uid","set","username","displayName","photoUrl","photoURL","roles","merge","setState","history","push","HOME","catch","code","message","preventDefault","state","render","SignInGoogle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n    <div className=\"wrapper\">\n       \n            \n            \n            <p className=\"btn-text\"><b>Sign in with google</b></p>\n        \n    \n        <SignInGoogle />\n       \n        {/* <SignInForm />\n    <SignInFacebook />\n    <SignInTwitter /> */}\n        {/* <PasswordForgetLink /> */}\n        <SignUpLink />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n    'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\n/*class SignInFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <div className=\"view-container\">\n                <form onSubmit={this.onSubmit} className=\"devedit-form\">\n                    <fieldset>\n                        <input\n                            name=\"email\"\n                            value={email}\n                            onChange={this.onChange}\n                            type=\"text\"\n                            placeholder=\"Email Address\"\n                        />\n                        <input\n                            name=\"password\"\n                            value={password}\n                            onChange={this.onChange}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                        <button className=\"button-tertiary\" disabled={isInvalid} type=\"submit\">\n                            Sign In\n        </button>\n\n                        {error && <p>{error.message}</p>}\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}*/\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n   super(props);\n\n     this.state = { error: null };\n  }\n\n  onSubmit = event => {\n      this.props.firebase\n          .doSignInWithGoogle()\n      .then(socialAuthUser => {\n       // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set(\n            {\n\n                username: socialAuthUser.user.displayName,\n                photoUrl: socialAuthUser.user.photoURL,\n             email: socialAuthUser.user.email,\n            roles: {},\n          },\n           { merge: true },\n          )\n      })\n          .then(() => {\n              this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n     })\n      .catch(error => {\n       if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n         error.message = ERROR_MSG_ACCOUNT_EXISTS;\n         }\n\n          this.setState({ error });\n      });\n\n     event.preventDefault();\n   };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Google</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n      );\n\n  }\n }\n\n// class SignInFacebookBase extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = { error: null };\n//   }\n\n//   onSubmit = event => {\n//     this.props.firebase\n//       .doSignInWithFacebook()\n//       .then(socialAuthUser => {\n//         // Create a user in your Firebase Realtime Database too\n//         return this.props.firebase.user(socialAuthUser.user.uid).set(\n//           {\n//             username: socialAuthUser.additionalUserInfo.profile.name,\n//             email: socialAuthUser.additionalUserInfo.profile.email,\n//             roles: {},\n//           },\n//           { merge: true },\n//         );\n//       })\n//       .then(() => {\n//         this.setState({ error: null });\n//         this.props.history.push(ROUTES.HOME);\n//       })\n//       .catch(error => {\n//         if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n//           error.message = ERROR_MSG_ACCOUNT_EXISTS;\n//         }\n\n//         this.setState({ error });\n//       });\n\n//     event.preventDefault();\n//   };\n\n//   render() {\n//     const { error } = this.state;\n\n//     return (\n//       <form onSubmit={this.onSubmit}>\n//         <button type=\"submit\">Sign In with Facebook</button>\n\n//         {error && <p>{error.message}</p>}\n//       </form>\n//     );\n//   }\n// }\n\n// class SignInTwitterBase extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = { error: null };\n//   }\n\n//   onSubmit = event => {\n//     this.props.firebase\n//       .doSignInWithTwitter()\n//       .then(socialAuthUser => {\n//         // Create a user in your Firebase Realtime Database too\n//         return this.props.firebase.user(socialAuthUser.user.uid).set(\n//           {\n//             username: socialAuthUser.additionalUserInfo.profile.name,\n//             email: socialAuthUser.additionalUserInfo.profile.email,\n//             roles: {},\n//           },\n//           { merge: true },\n//         );\n//       })\n//       .then(() => {\n//         this.setState({ error: null });\n//         this.props.history.push(ROUTES.HOME);\n//       })\n//       .catch(error => {\n//         if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n//           error.message = ERROR_MSG_ACCOUNT_EXISTS;\n//         }\n\n//         this.setState({ error });\n//       });\n\n//     event.preventDefault();\n//   };\n\n//   render() {\n//     const { error } = this.state;\n\n//     return (\n//       <form onSubmit={this.onSubmit}>\n//         <button type=\"submit\">Sign In with Twitter</button>\n\n//         {error && <p>{error.message}</p>}\n//       </form>\n//     );\n//   }\n// }\n\n/*const SignInForm = compose(\n    withRouter,\n    withFirebase,\n)(SignInFormBase);*/\n\n const SignInGoogle = compose(\n   withRouter,\n   withFirebase,\n )(SignInGoogleBase);\n\n// const SignInFacebook = compose(\n//   withRouter,\n//   withFirebase,\n// )(SignInFacebookBase);\n\n// const SignInTwitter = compose(\n//   withRouter,\n//   withFirebase,\n// )(SignInTwitterBase);\n\nexport default SignInPage;\n\nexport { SignInGoogle };"]},"metadata":{},"sourceType":"module"}