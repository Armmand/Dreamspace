{"ast":null,"code":"import _objectSpread from \"/Users/nick/devedit/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/nick/devedit/src/components/ListItem1/index.js\";\nimport React from \"react\"; //import myimage from \"../../assets/images/nice-piccy3.jpg\";\n\nimport { withFirebase } from \"../Firebase\";\nimport { compose } from \"recompose\";\nimport { withRouter } from \"react-router-dom\";\nimport { AuthUserContext } from \"../Session\";\n\nclass ListItem1 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidUpdate = prevProps => {\n      if (prevProps.article !== this.props.article) {\n        this.calculatedvote(this.props.article.upvotes, this.props.article.downvotes);\n      }\n    };\n\n    this.checkurl = () => {\n      // console.log(\"check url\", this.props.article.url)\n      if (this.props.article.url === true) {\n        return React.createElement(\"a\", {\n          href: \"{this.props.article.url}\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Related link\");\n      } else {\n        return null;\n      }\n    };\n\n    this.handleUpvote = authUser => {\n      const article = this.props.article;\n      let initialvote = [authUser.uid];\n\n      if (article.upvotes === 0) {\n        if (this.checkDownvote(authUser.uid, article.downvotes) === -1) {\n          this.setState({\n            downvotecolor: 'gray',\n            upvotecolor: 'darkred'\n          });\n          this.props.firebase.article(article.uid).set(_objectSpread({}, article, {\n            upvotes: initialvote\n          })); // console.log(\"upvotes\", this.upvotes)\n        } else {\n          let uidIndex = this.checkDownvote(authUser.uid, article.downvotes);\n          let articlearray = article.downvotes;\n          articlearray.splice(uidIndex, 1);\n          this.setState({\n            downvotecolor: 'gray',\n            upvotecolor: 'darkred'\n          });\n          this.props.firebase.article(article.uid).set(_objectSpread({}, article, {\n            upvotes: initialvote,\n            downvotes: articlearray\n          }));\n        }\n      } else {\n        if (this.checkUpvote(authUser.uid, article.upvotes) === -1) {\n          if (this.checkDownvote(authUser.uid, article.downvotes) === -1) {\n            // console.log(this.checkUpvote)\n            this.setState({\n              calculatedvote: this.state.calculatedvote + 1,\n              upvotecolor: 'darkred',\n              downvotecolor: 'gray'\n            });\n            let upvotes = article.upvotes;\n            let updatedUpvotes = upvotes;\n            updatedUpvotes.push(authUser.uid);\n            this.props.firebase.article(article.uid).set(_objectSpread({}, article, {\n              calculatedvote: this.state.calculatedvote + 1,\n              ////here i tried to put the updated calculated vote on firebase\n              upvotes: updatedUpvotes\n            }));\n          } else {\n            //  console.log(\"checkDownvote\")\n            let uidindex = this.checkDownvote(authUser.uid, article.downvotes);\n            let articlearray = article.downvotes;\n            this.setState({\n              downvotecolor: 'gray',\n              upvotecolor: 'darkred'\n            });\n            articlearray.splice(uidindex, 1); //  console.log(\"article.upvote\", article.upvotes)\n            //let upvotesarray=article.upvotes.push(authUser.uid)\n\n            let upvotes = article.upvotes;\n            let updatedUpvotes = upvotes;\n            updatedUpvotes.push(authUser.uid);\n            this.props.firebase.article(article.uid).set(_objectSpread({}, article, {\n              downvotes: articlearray,\n              upvotes: updatedUpvotes\n            }));\n          }\n        } else {//  console.log(\"already upvoted\")\n        }\n      }\n    };\n\n    this.handleDownvote = authUser => {\n      const article = this.props.article;\n      let initialvote = [authUser.uid];\n\n      if (article.downvotes === 0) {\n        // console.log(\"typeof\", typeof (article.upvotes))\n        if (this.checkUpvote(authUser.uid, article.upvotes) === -1) {\n          this.setState({\n            downvotecolor: 'dodgerblue',\n            upvotecolor: 'gray'\n          });\n          this.props.firebase.article(article.uid).set(_objectSpread({}, article, {\n            downvotes: initialvote\n          }));\n        } else {\n          let uidIndex = this.checkUpvote(authUser.uid, article.upvotes);\n          let articlearray = article.upvotes;\n          articlearray.splice(uidIndex, 1);\n          this.setState({\n            downvotecolor: 'dodgerblue',\n            upvotecolor: 'gray'\n          });\n          this.props.firebase.article(article.uid).set(_objectSpread({}, article, {\n            downvotes: initialvote,\n            upvotes: articlearray\n          }));\n        }\n      } else {\n        // console.log(\"checkdownvote\", this.checkDownvote(authUser.uid, article.downvotes));\n        if (this.checkDownvote(authUser.uid, article.downvotes) === -1) {\n          if (this.checkUpvote(authUser.uid, article.upvotes) === -1) {\n            this.setState({\n              calculatedvote: this.state.calculatedvote - 1,\n              downvotecolor: 'dodgerblue',\n              upvotecolor: 'gray'\n            });\n            let downvotes = article.downvotes;\n            let updatedDownvotes = downvotes;\n            updatedDownvotes.push(authUser.uid);\n            this.props.firebase.article(article.uid).set(_objectSpread({}, article, {\n              calculatedvote: this.state.calculatedvote - 1,\n              //here i tried to put the updated calculated vote on firebase\n              downvotes: updatedDownvotes\n            }));\n          } else {\n            // console.log(\"checkDownvote\")\n            let uidindex = this.checkUpvote(authUser.uid, article.upvotes);\n            this.setState({\n              downvotecolor: 'dodgerblue',\n              upvotecolor: 'gray'\n            }); //   console.log(\"uid\", uidindex)\n\n            let articlearray = article.upvotes;\n            articlearray.splice(uidindex, 1); //  console.log(\"article.downvote\", article.downvotes)\n            //let downvotearray=article.downvotes.push(authUser.uid)\n\n            let downvotes = article.downvotes;\n            let updatedDownvotes = downvotes;\n            updatedDownvotes.push(authUser.uid);\n            this.props.firebase.article(article.uid).set(_objectSpread({}, article, {\n              upvotes: articlearray,\n              downvotes: updatedDownvotes\n            }));\n          }\n        } else {// console.log(\"already upvoted\")\n        }\n      }\n    };\n\n    this.checkUpvote = (uid, upvotes) => {\n      // console.log(\"filter\", upvotes, uid)\n      if (typeof upvotes === \"number\") {\n        return -1;\n      } else {\n        let filteredUpvote = upvotes.indexOf(uid); // console.log(\"filteredvote\", filteredUpvote)\n\n        return filteredUpvote;\n      }\n    };\n\n    this.checkDownvote = (uid, downvotes) => {\n      // console.log(\"filter\", downvotes, uid)\n      // console.log(\"typeof1\", typeof (downvotes))\n      if (typeof downvotes === \"number\") {\n        return -1;\n      } else {\n        let filteredDownvote = downvotes.indexOf(uid); // console.log(\"filteredvote\", filteredDownvote)\n\n        return filteredDownvote;\n      }\n    };\n\n    this.state = {\n      article: [],\n      upvotes: [],\n      downvotes: [],\n      calculatedvote: [],\n      upvotecolor: 'gray',\n      downvotecolor: 'gray',\n      username: \"\",\n      TotallComment: \"\",\n      totalcount: 0,\n      sortType: 'asc',\n      photoUrl: \" \"\n    };\n  }\n\n  componentDidMount() {\n    const article = this.props.article; // console.log(\"this is the new article:\", article)\n\n    let upvotes = article.upvotes; // console.log(\"this is the upvotes:\" + upvotes)\n\n    let downvotes = article.downvotes;\n    this.calculatedvote(upvotes, downvotes);\n    let autherId = article.userId;\n    this.unsubscribe = this.props.firebase.user(autherId).get().then(doc => {\n      console.log(\"userdata\", doc.data());\n      let user = doc.data();\n      this.setState({\n        username: user.username,\n        photoUrl: user.photoUrl\n      });\n    });\n  }\n\n  calculatedvote(upvotes, downvotes) {\n    if (upvotes === 0) {\n      upvotes = [];\n    }\n\n    if (downvotes === 0) {\n      downvotes = [];\n    }\n\n    let upvotesTotal = upvotes.length;\n    let downvotesTotal = downvotes.length;\n    let finalTotal = upvotesTotal - downvotesTotal; // console.log(\"upvotestotal\", upvotesTotal)\n    //console.log(\"downvotestotal\", downvotesTotal)\n\n    this.setState({\n      calculatedvote: finalTotal\n    });\n    const article = this.props.article;\n    this.props.firebase.article(article.uid).set(_objectSpread({}, article, {\n      calculatedvote: finalTotal\n    }));\n  }\n\n  render() {\n    /*const { article } = this.props;\n    const {sortType}=this.state\n    if (article) {\n        article.sort((a, b) => {\n            const isReversed = (sortType === 'dsc') ? 1 : -1;\n            return isReversed * a.calculatedvote.localeCompare(b.calculatedvote)\n        })\n     }*/\n    if (this.props.isIndividualView === true) {\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, authUser => React.createElement(\"div\", {\n        className: \"likes-individual\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"likes1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: \"1em\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"upvote-individual\",\n        onClick: () => this.handleUpvote(authUser),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-arrow-alt-up\",\n        style: {\n          color: this.state.upvotecolor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \" \")), this.state.calculatedvote, React.createElement(\"div\", {\n        className: \"downvote-individual\",\n        onClick: () => this.handleDownvote(authUser),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-arrow-alt-down\",\n        style: {\n          color: this.state.downvotecolor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \" \"))))));\n    } else {\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, authUser => React.createElement(\"div\", {\n        className: \"Likis-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"likes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: \"1em\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"upvote\",\n        onClick: () => this.handleUpvote(authUser),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-arrow-alt-up\",\n        style: {\n          color: this.state.upvotecolor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \" \")), this.state.calculatedvote, React.createElement(\"div\", {\n        className: \"downvote\",\n        onClick: () => this.handleDownvote(authUser),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-arrow-alt-down\",\n        style: {\n          color: this.state.downvotecolor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \" \")))), this.props.children));\n    }\n  }\n\n}\n\nexport default compose(withFirebase, withRouter)(ListItem1);","map":{"version":3,"sources":["/Users/nick/devedit/src/components/ListItem1/index.js"],"names":["React","withFirebase","compose","withRouter","AuthUserContext","ListItem1","Component","constructor","props","componentDidUpdate","prevProps","article","calculatedvote","upvotes","downvotes","checkurl","url","handleUpvote","authUser","initialvote","uid","checkDownvote","setState","downvotecolor","upvotecolor","firebase","set","uidIndex","articlearray","splice","checkUpvote","state","updatedUpvotes","push","uidindex","handleDownvote","updatedDownvotes","filteredUpvote","indexOf","filteredDownvote","username","TotallComment","totalcount","sortType","photoUrl","componentDidMount","autherId","userId","unsubscribe","user","get","then","doc","console","log","data","upvotesTotal","length","downvotesTotal","finalTotal","render","isIndividualView","fontSize","marginRight","marginLeft","color","children"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import myimage from \"../../assets/images/nice-piccy3.jpg\";\nimport { withFirebase } from \"../Firebase\";\nimport { compose } from \"recompose\";\nimport { withRouter } from \"react-router-dom\";\nimport { AuthUserContext } from \"../Session\";\n\nclass ListItem1 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            article: [],\n            upvotes: [],\n            downvotes: [],\n            calculatedvote: [],\n            upvotecolor: 'gray',\n            downvotecolor: 'gray',\n            username: \"\",\n            TotallComment: \"\",\n            totalcount: 0,\n            sortType: 'asc',\n              photoUrl: \" \"\n\n\n        };\n    }\n   \n\n\n\n    componentDidMount() {\n\n        const { article } = this.props\n        // console.log(\"this is the new article:\", article)\n        let upvotes = article.upvotes;\n        // console.log(\"this is the upvotes:\" + upvotes)\n        let downvotes = article.downvotes;\n        this.calculatedvote(upvotes, downvotes)\n        let autherId = article.userId;\n        this.unsubscribe = this.props.firebase\n            \n            .user(autherId)\n            .get()\n            .then(doc => {\n                 console.log(\"userdata\", doc.data())\n                let user = doc.data()\n              \n                this.setState({\n                    username: user.username,\n                    photoUrl: user.photoUrl,\n                })\n            })\n   \n\n    }\n\n\n    componentDidUpdate = (prevProps) => {\n        if (prevProps.article !== this.props.article) {\n            this.calculatedvote(this.props.article.upvotes, this.props.article.downvotes)\n        }\n    };\n\n\n    checkurl = () => {\n        // console.log(\"check url\", this.props.article.url)\n        if (this.props.article.url === true) {\n            return <a href=\"{this.props.article.url}\">Related link</a>\n        }\n        else {\n            return null\n        }\n    }\n\n    calculatedvote(upvotes, downvotes) {\n\n        if (upvotes === 0) {\n            upvotes = []\n        }\n        if (downvotes === 0) {\n            downvotes = []\n        }\n\n        let upvotesTotal = upvotes.length;\n        let downvotesTotal = downvotes.length;\n        let finalTotal = upvotesTotal - downvotesTotal;\n        // console.log(\"upvotestotal\", upvotesTotal)\n        //console.log(\"downvotestotal\", downvotesTotal)\n        this.setState({ calculatedvote: finalTotal }) \n        const { article } = this.props;\n        this.props.firebase\n            .article(article.uid)\n            .set({\n                ...article,\n                calculatedvote: finalTotal\n            })\n            \n       \n    }\n    handleUpvote = (authUser) => {\n\n        const { article } = this.props\n        let initialvote = [authUser.uid];\n        if (article.upvotes === 0) {\n            if (this.checkDownvote(authUser.uid, article.downvotes) === -1) {\n                this.setState({\n                    downvotecolor: 'gray',\n                    upvotecolor: 'darkred'\n                })\n                this.props.firebase\n                    .article(article.uid)\n                    .set({\n                        ...article,\n                        upvotes: initialvote,\n                    })\n                // console.log(\"upvotes\", this.upvotes)\n            }\n            else {\n                let uidIndex = this.checkDownvote(authUser.uid, article.downvotes)\n                let articlearray = article.downvotes;\n                articlearray.splice(uidIndex, 1)\n                this.setState({\n                    downvotecolor: 'gray',\n                    upvotecolor: 'darkred'\n                })\n                this.props.firebase\n                    .article(article.uid)\n                    .set({\n                        ...article,\n                        upvotes: initialvote,\n                        downvotes: articlearray\n                    })\n            }\n        }\n        else {\n            if (this.checkUpvote(authUser.uid, article.upvotes) === -1) {\n                if (this.checkDownvote(authUser.uid, article.downvotes) === -1) {\n\n                    // console.log(this.checkUpvote)\n                    this.setState({\n                        calculatedvote: this.state.calculatedvote + 1,\n                        upvotecolor: 'darkred',\n                        downvotecolor: 'gray'\n                    })\n                    let upvotes = article.upvotes\n                    let updatedUpvotes = upvotes\n                    updatedUpvotes.push(authUser.uid)\n                    this.props.firebase\n                        .article(article.uid)\n                        .set({\n                            ...article,\n                            calculatedvote: this.state.calculatedvote + 1,////here i tried to put the updated calculated vote on firebase\n                            upvotes: updatedUpvotes\n                        })\n\n                }\n\n                else {\n                    //  console.log(\"checkDownvote\")\n                    let uidindex = this.checkDownvote(authUser.uid, article.downvotes)\n                    let articlearray = article.downvotes;\n                    this.setState({\n\n                        downvotecolor: 'gray',\n                        upvotecolor: 'darkred'\n                    })\n                    articlearray.splice(uidindex, 1)\n                    //  console.log(\"article.upvote\", article.upvotes)\n                    //let upvotesarray=article.upvotes.push(authUser.uid)\n                    let upvotes = article.upvotes\n                    let updatedUpvotes = upvotes\n                    updatedUpvotes.push(authUser.uid)\n                    this.props.firebase\n                        .article(article.uid)\n                        .set({\n                            ...article,\n                            downvotes: articlearray,\n                            upvotes: updatedUpvotes\n                        })\n                }\n            }\n            else {\n                //  console.log(\"already upvoted\")\n            }\n        }\n    }\n    handleDownvote = (authUser) => {\n        const { article } = this.props\n        let initialvote = [authUser.uid];\n\n        if (article.downvotes === 0) {\n            // console.log(\"typeof\", typeof (article.upvotes))\n            if (this.checkUpvote(authUser.uid, article.upvotes) === -1) {\n                this.setState({\n                    downvotecolor: 'dodgerblue',\n                    upvotecolor: 'gray'\n                })\n                this.props.firebase\n                    .article(article.uid)\n                    .set({\n                        ...article,\n                        downvotes: initialvote\n                    })\n\n            }\n            else {\n                let uidIndex = this.checkUpvote(authUser.uid, article.upvotes)\n                let articlearray = article.upvotes;\n                articlearray.splice(uidIndex, 1)\n                this.setState({\n                    downvotecolor: 'dodgerblue',\n                    upvotecolor: 'gray'\n                })\n                this.props.firebase\n                    .article(article.uid)\n                    .set({\n                        ...article,\n                        downvotes: initialvote,\n                        upvotes: articlearray\n                    })\n            }\n        }\n        else {\n            // console.log(\"checkdownvote\", this.checkDownvote(authUser.uid, article.downvotes));\n            if (this.checkDownvote(authUser.uid, article.downvotes) === -1) {\n                if (this.checkUpvote(authUser.uid, article.upvotes) === -1) {\n                    this.setState({\n                        calculatedvote: this.state.calculatedvote - 1,\n                        downvotecolor: 'dodgerblue',\n                        upvotecolor: 'gray'\n                    })\n                    let downvotes = article.downvotes\n                    let updatedDownvotes = downvotes\n                    updatedDownvotes.push(authUser.uid)\n                    this.props.firebase\n                        .article(article.uid)\n                        .set({\n                            ...article,\n                            calculatedvote: this.state.calculatedvote - 1,//here i tried to put the updated calculated vote on firebase\n                            downvotes: updatedDownvotes\n                        })\n\n                }\n\n\n                else {\n                    // console.log(\"checkDownvote\")\n                    let uidindex = this.checkUpvote(authUser.uid, article.upvotes)\n                    this.setState({\n                        downvotecolor: 'dodgerblue',\n                        upvotecolor: 'gray'\n                    })\n                    //   console.log(\"uid\", uidindex)\n                    let articlearray = article.upvotes;\n                    articlearray.splice(uidindex, 1)\n                    //  console.log(\"article.downvote\", article.downvotes)\n                    //let downvotearray=article.downvotes.push(authUser.uid)\n                    let downvotes = article.downvotes\n                    let updatedDownvotes = downvotes\n                    updatedDownvotes.push(authUser.uid)\n                    this.props.firebase\n                        .article(article.uid)\n                        .set({\n                            ...article,\n                            upvotes: articlearray,\n                            downvotes: updatedDownvotes\n                        })\n                }\n            }\n\n            else {\n                // console.log(\"already upvoted\")\n            }\n        }\n    }\n\n    checkUpvote = (uid, upvotes) => {\n        // console.log(\"filter\", upvotes, uid)\n        if (typeof (upvotes) === \"number\") {\n\n            return -1\n\n        }\n        else {\n            let filteredUpvote = upvotes.indexOf(uid)\n            // console.log(\"filteredvote\", filteredUpvote)\n\n            return filteredUpvote\n        }\n    }\n    checkDownvote = (uid, downvotes) => {\n        // console.log(\"filter\", downvotes, uid)\n        // console.log(\"typeof1\", typeof (downvotes))\n        if (typeof (downvotes) === \"number\") {\n\n            return -1\n        }\n        else {\n            let filteredDownvote = downvotes.indexOf(uid)\n\n            // console.log(\"filteredvote\", filteredDownvote)\n\n\n            return filteredDownvote\n        }\n    }\n    render() {\n        /*const { article } = this.props;\n        const {sortType}=this.state\n        if (article) {\n            article.sort((a, b) => {\n                const isReversed = (sortType === 'dsc') ? 1 : -1;\n                return isReversed * a.calculatedvote.localeCompare(b.calculatedvote)\n            })\n\n        }*/\n\n\n        if (this.props.isIndividualView === true) {\n            return (\n                <AuthUserContext.Consumer>\n                    {\n                        authUser => (\n                            <div className=\"likes-individual\">\n\n                                <div className=\"likes1\">\n                                    <span style={{\n                                        fontSize: \"1em\",\n                                        marginRight: \"auto\", marginLeft: \"auto\"\n                                    }}>\n                                        <div className=\"upvote-individual\"\n\n                                            onClick={() => this.handleUpvote(authUser)}\n                                        >\n                                            <i className=\"fas fa-arrow-alt-up\" style={{ color: this.state.upvotecolor }}> </i>\n                                        </div>\n\n                                        {this.state.calculatedvote}\n\n                                        <div className=\"downvote-individual\"\n                                            onClick={() => this.handleDownvote(authUser)}\n                                        >\n\n                                            <i className=\"fas fa-arrow-alt-down\" style={{\n                                                color: this.state.downvotecolor\n\n                                            }}> </i>\n                                        </div>\n                                    </span>\n                                </div>\n                            </div>\n\n\n                        )}\n                </AuthUserContext.Consumer>\n            )\n        }\n        else {\n\n            return (\n\n                <AuthUserContext.Consumer>\n                    {\n                        authUser => (\n                            <div className=\"Likis-container\">\n\n                                <div className=\"likes\">\n                                    <span style={{\n                                        fontSize: \"1em\",\n                                        marginRight: \"auto\", marginLeft: \"auto\"\n                                    }}>\n                                        <div className=\"upvote\"\n\n                                            onClick={() => this.handleUpvote(authUser)}\n                                        >\n                                            <i className=\"fas fa-arrow-alt-up\" style={{ color: this.state.upvotecolor }}> </i>\n                                        </div>\n\n                                        {this.state.calculatedvote}\n\n                                        <div className=\"downvote\"\n                                            onClick={() => this.handleDownvote(authUser)}\n                                        >\n\n                                            <i className=\"fas fa-arrow-alt-down\" style={{\n                                                color: this.state.downvotecolor\n\n                                            }}> </i>\n                                        </div>\n                                    </span>\n                                </div>\n                                {this.props.children}\n\n                            </div>\n\n\n                        )}\n\n                </AuthUserContext.Consumer>\n            )\n        }\n    }\n}\nexport default compose(withFirebase, withRouter)(ListItem1);\n\n"]},"metadata":{},"sourceType":"module"}