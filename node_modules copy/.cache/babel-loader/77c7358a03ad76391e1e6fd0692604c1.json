{"ast":null,"code":"import _objectSpread from \"/Users/nick/devedit/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/nick/devedit/src/containers/IndividualView/index.js\";\nimport React, { Fragment } from \"react\";\nimport AddComment from \"../../components/CommentSystem/AddComment\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { withFirebase } from \"../../components/Firebase\";\nimport Comment from \"../../components/Comment\";\nimport ListItem1 from '../../components/ListItem1';\nimport ReplyComment from \"../../components/ReplyComment\";\nimport AddReplys from \"../../components/AddReplys\";\n\nconst moment = require(\"moment\");\n\nclass IndividualView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      //this.sortByDtate(Comment)\n      let articleId = this.props.match.params.articleId;\n      this.unsubscribe = this.props.firebase.comments().where(\"articleId\", \"==\", articleId) //.orderBy('timeCreated','desc')\n      .limit(8).onSnapshot(snapshot => {\n        const comments = [];\n        let commentId = \"\";\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          commentId = doc.id;\n          data.commentId = commentId;\n          comments.push(data);\n          this.setState({\n            comments: comments\n          });\n        });\n      }); //get the ID for a particular article\n      // console.log(\"articleId\", this.props.match.params);\n\n      this.setState({\n        articleId\n      });\n      this.unsubscribe = this.props.firebase.article(articleId).onSnapshot(doc => {\n        if (doc.exists) {\n          // console.log(\" this is my article\", doc.data());\n          this.setState({\n            article: doc.data()\n          });\n          this.setState({\n            timeCreated: moment().format(\" MMMM DD, YYYY  --  hh:mm:ss A  \")\n          }); // set data to local state\n          // console.log(\"this is a state article:\" , this.state.article)\n        } else {\n          console.log(\"No such document!\");\n        }\n      }); //This Helps to find the total commets for spesific articleId\n\n      this.unsubscribe = this.props.firebase.comments().where(\"articleId\", \"==\", articleId).onSnapshot(snapshot => {\n        const TotallComment = [];\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          TotallComment.push(data);\n        });\n        this.setState({\n          TotallComment: TotallComment\n        });\n        const totalcount = TotallComment.length;\n        this.setState({\n          totalcount: totalcount\n        });\n      });\n    };\n\n    this.createComment = (comment, article) => {\n      //  console.log(\"here create comment\", comment, this.state.articleId);\n      this.props.firebase.comments().add(_objectSpread({}, comment, {\n        articleId: this.state.articleId\n      })).then(function (docRef) {//console.log(\"Document written with ID: \", docRef.id);\n      });\n    };\n\n    this.state = {\n      comments: null,\n      limit: \"\",\n      limited: 450,\n      TotallComment: \"\",\n      totalcount: \"\",\n      isOldestFirst: true,\n      commentId: \"\"\n    };\n  }\n\n  sortByDate() {\n    const comment = this.state.comment;\n    let newPostList = comment; // console.log(\"this is the sorted data\",newPostList)\n\n    if (this.state.isOldestFirst) {\n      newPostList = comment.sort((a, b) => a.date > b.date);\n    } else {\n      newPostList = comment.sort((a, b) => a.date < b.date); //console.log(\"this is the sorted data\",newPostList)\n    }\n\n    this.setState({\n      isOldestFirst: !this.state.isOldestFirsts,\n      comments: newPostList\n    }); // console.log(\"this is the sorted data\",newPostList)\n  }\n\n  render() {\n    // Access to local component state\n    const _this$state = this.state,\n          article = _this$state.article,\n          comment = _this$state.comment,\n          timeCreated = _this$state.timeCreated,\n          limited = _this$state.limited;\n\n    if (article) {\n      return React.createElement(\"div\", {\n        className: \"container-individual \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-individual\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(ListItem1, {\n        article: article,\n        isIndividualView: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"auther-name-individual\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"autherstyle-individual\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"posted by \", article.timeCreated))), React.createElement(\"div\", {\n        className: \"grid-subject2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: article.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, article.title)), React.createElement(\"div\", {\n        className: \"grid-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, article.description)), React.createElement(\"div\", {\n        className: \"stylebutton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          justifyContent: \"spacebitween\"\n        },\n        type: \"button\" //onClick={this.handleSubmit}\n        ,\n        className: \"disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \" \"), \" \", this.state.totalcount, \" \", \"Comment\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleRemove,\n        className: \"disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Save\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(AddComment, {\n        comment: comment,\n        onCreate: this.createComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.state.comments && this.state.comments.map((comment, index) => {\n        {\n          /* console.log(comment) */\n        }\n        return React.createElement(\"div\", {\n          className: \"card-comment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(Comment, {\n          comment: comment,\n          key: index,\n          limited: limited,\n          timeCreated: timeCreated,\n          commentId: comment.commentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }));\n      })));\n    } else {\n      console.log(\"no article\");\n      return null;\n    }\n  }\n\n}\n\nexport default compose(withFirebase, withRouter)(IndividualView);","map":{"version":3,"sources":["/Users/nick/devedit/src/containers/IndividualView/index.js"],"names":["React","Fragment","AddComment","withRouter","compose","withFirebase","Comment","ListItem1","ReplyComment","AddReplys","moment","require","IndividualView","Component","constructor","props","componentDidMount","articleId","match","params","unsubscribe","firebase","comments","where","limit","onSnapshot","snapshot","commentId","forEach","doc","data","id","push","setState","article","exists","timeCreated","format","console","log","TotallComment","totalcount","length","createComment","comment","add","state","then","docRef","limited","isOldestFirst","sortByDate","newPostList","sort","a","b","date","isOldestFirsts","render","url","title","description","justifyContent","handleRemove","map","index"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport AddComment from \"../../components/CommentSystem/AddComment\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { withFirebase } from \"../../components/Firebase\";\nimport Comment from \"../../components/Comment\";\nimport ListItem1 from '../../components/ListItem1'\nimport ReplyComment from \"../../components/ReplyComment\";\nimport AddReplys from  \"../../components/AddReplys\"\nconst moment = require(\"moment\");\nclass IndividualView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: null,\n      limit: \"\",\n      limited: 450,\n      TotallComment: \"\",\n      totalcount: \"\",\n      isOldestFirst:true,\n     commentId:\"\"\n    };\n  }\n\n  componentDidMount = () => {\n    //this.sortByDtate(Comment)\n    let articleId = this.props.match.params.articleId;\n    this.unsubscribe = this.props.firebase\n      .comments()\n\n      .where(\"articleId\", \"==\", articleId)\n\n      //.orderBy('timeCreated','desc')\n      .limit(8)\n\n      .onSnapshot(snapshot => {\n        const comments = [];\n        let commentId =\"\";\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          commentId=doc.id\n          data.commentId= commentId\n          comments.push(data);\n              this.setState({\n                comments:comments,\n            });\n        });\n\n      });\n   \n\n    //get the ID for a particular article\n    // console.log(\"articleId\", this.props.match.params);\n    this.setState({ articleId });\n\n    this.unsubscribe = this.props.firebase\n      .article(articleId)\n      \n      .onSnapshot(doc => {\n        if (doc.exists) {\n         // console.log(\" this is my article\", doc.data());\n          this.setState({\n            article: doc.data()})\n            this.setState({\n            timeCreated: moment().format(` MMMM DD, YYYY  --  hh:mm:ss A  `)\n          }); // set data to local state\n         // console.log(\"this is a state article:\" , this.state.article)\n        } else {\n          console.log(\"No such document!\");\n        }\n      });\n    //This Helps to find the total commets for spesific articleId\n    this.unsubscribe = this.props.firebase\n      .comments()\n      .where(\"articleId\", \"==\", articleId)\n      .onSnapshot(snapshot => {\n        const TotallComment = [];\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          TotallComment.push(data);\n        });\n\n        this.setState({ TotallComment: TotallComment });\n        const totalcount = TotallComment.length\n        this.setState({totalcount:totalcount})\n      });\n     \n  };\n\n  \n\n  createComment = (comment, article) => {\n    //  console.log(\"here create comment\", comment, this.state.articleId);\n    this.props.firebase\n      .comments()\n      .add({\n        ...comment,\n        articleId: this.state.articleId\n      })\n      .then(function(docRef) {\n        //console.log(\"Document written with ID: \", docRef.id);\n      });\n  };\n\n\n sortByDate() {\n  const {comment} = this.state\n  let newPostList = comment\n // console.log(\"this is the sorted data\",newPostList)\n  if (this.state.isOldestFirst) {\n    newPostList = comment.sort((a, b) => a.date > b.date)\n  } else {\n    newPostList = comment.sort((a, b) => a.date < b.date)\n    //console.log(\"this is the sorted data\",newPostList)\n  }\n  this.setState({\n    isOldestFirst: !this.state.isOldestFirsts,\n    comments: newPostList\n  \n  })\n     // console.log(\"this is the sorted data\",newPostList)\n}\n  render() {\n    // Access to local component state\n    const {\n      article,\n      comment,\n   \n      timeCreated,\n     \n      limited\n    } = this.state;\n   \nif(article){\n    return (\n      <div className=\"container-individual \">\n        <div className=\"card-individual\">\n\n          <ListItem1 article={article }  isIndividualView = {true}/>\n         \n          <div className=\"auther-name-individual\">\n            <div className=\"autherstyle-individual\">\n              <i className=\"fa fa-user\"></i>\n              <span>posted by {article.timeCreated}</span>\n            </div>\n          </div>\n\n          <div className=\"grid-subject2\">\n            <a href={article.url}>{article.title}</a>\n          </div>\n\n          <div className=\"grid-description\">\n            <p>{article.description}</p>\n          </div>\n\n          <div className=\"stylebutton\">\n            <button style={{justifyContent:\"spacebitween\"}}\n              type=\"button\"\n              //onClick={this.handleSubmit}\n              className=\"disabled\"\n            >\n              <i className=\"fa fa-comment\"> </i>\n              {\" \"}\n              {this.state.totalcount}\n              {\" \"}\n              Comment\n            </button>\n            <button type=\"button\" onClick={this.handleRemove} className=\"disabled\">\n              Save\n            </button>\n          </div>\n        </div>\n\n        <div>\n          <AddComment comment={comment} onCreate={this.createComment} />\n        </div>\n\n        <div>\n          {this.state.comments &&\n            this.state.comments.map((comment,index) => {\n              {/* console.log(comment) */}\n              return (\n               <div  className=\"card-comment\">\n               <Comment \n                  comment={comment}\n                  key={index}\n                  limited={limited}\n                  timeCreated={timeCreated}\n                  commentId={comment.commentId}\n              />\n             {/* <ReplyComment     commentId={comment.commentId}/>*/}\n             \n                </div>\n                );\n               \n            })}\n         \n        </div>\n        \n      </div>\n    );\n          }\n          else {\n          \n            console.log(\"no article\")\n            return(\n            null)\n\n          }\n  }\n}\n\nexport default compose(withFirebase, withRouter)(IndividualView);\n"]},"metadata":{},"sourceType":"module"}