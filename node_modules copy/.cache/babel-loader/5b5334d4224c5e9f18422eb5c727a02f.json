{"ast":null,"code":"import _objectSpread from \"/Users/nick/devedit/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/nick/devedit/src/components/SignIn/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport PasswordForgetLink from '../PasswordForgetForm';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => React.createElement(\"div\", {\n  className: \"wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  style: {\n    fontSize: \"28px\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, \"SignIn\"), React.createElement(SignInGoogle, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}), React.createElement(SignInFacebook, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}), React.createElement(SignInGithub, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}), React.createElement(\"p\", {\n  style: {\n    textAlign: \"center\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Or sign in manually:\"), React.createElement(SignInForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(PasswordForgetLink, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), React.createElement(SignUpLink, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/account-exists-with-different-credential';\nconst ERROR_MSG_ACCOUNT_EXISTS = \"\\n  An account with an E-Mail address to\\n  this social account already exists. Try to login from\\n  this account instead and associate your social accounts on\\n  your personal account page.\\n\";\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      this.props.firebase.doSignInWithEmailAndPassword(email, password).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          error = _this$state2.error;\n    const isInvalid = password === '' || email === '';\n    return React.createElement(\"div\", {\n      className: \"view-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"devedit-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      value: password,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button-tertiary\",\n      disabled: isInvalid,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Sign In\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, error.message))));\n  }\n\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      this.props.firebase.doSignInWithGoogle().then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        if (socialAuthUser.user.photoURL === \"\") {\n          console.log(\"photoUrl\", socialAuthUser.user.photoURL);\n          return this.props.firebase.user(socialAuthUser.user.uid).set({\n            username: socialAuthUser.user.displayName,\n            photoUrl: socialAuthUser.user.photoURL,\n            email: socialAuthUser.user.email,\n            roles: {}\n          }, {\n            merge: true\n          });\n        } else {\n          return this.props.firebase.user(socialAuthUser.user.uid).set({\n            username: socialAuthUser.user.displayName,\n            //photoUrl: socialAuthUser.user.photoURL,\n            email: socialAuthUser.user.email,\n            roles: {}\n          }, {\n            merge: true\n          });\n        }\n      }).then(() => {\n        this.setState({\n          error: null\n        });\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      error: null,\n      photoURL: \"\"\n    };\n  }\n\n  render() {\n    const error = this.state.error;\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      button: true,\n      type: \"submit\",\n      className: \"googlebtn\",\n      style: {\n        fontSize: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fa fa-google fa-fw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \" \"), \" Login with Google\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      this.props.firebase.doSignInWithFacebook().then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        if (socialAuthUser.additionalUserInfo.profile.photoURL === \"\") {\n          return this.props.firebase.user(socialAuthUser.user.uid).set({\n            username: socialAuthUser.additionalUserInfo.profile.name,\n            photoUrl: socialAuthUser.additionalUserInfo.profile.photoURL,\n            email: socialAuthUser.additionalUserInfo.profile.email,\n            roles: {}\n            /*username: socialAuthUser.user.displayName,\n            photoUrl: socialAuthUser.user.photoURL,\n            email: socialAuthUser.user.email,\n            roles: {},*/\n\n          }, {\n            merge: true\n          });\n        } else {\n          return this.props.firebase.user(socialAuthUser.user.uid).set({\n            username: socialAuthUser.additionalUserInfo.profile.name,\n            // photoUrl: socialAuthUser.additionalUserInfo.profile.photoURL,\n            email: socialAuthUser.additionalUserInfo.profile.email,\n            roles: {}\n            /*username: socialAuthUser.user.displayName,\n            photoUrl: socialAuthUser.user.photoURL,\n            email: socialAuthUser.user.email,\n            roles: {},*/\n\n          }, {\n            merge: true\n          });\n        }\n      }).then(() => {\n        this.setState({\n          error: null\n        });\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      error: null\n    };\n  }\n\n  render() {\n    const error = this.state.error;\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      style: {\n        fontSize: \"20px\"\n      },\n      className: \"fb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fa fa-facebook fa-fw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), \"Sign In with Facebook\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nclass SignInGithubBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      this.props.firebase.doSignInWithGithub().then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          //roles: {},\n          //username: socialAuthUser.user.displayName,\n          //username: socialAuthUser.user.displayName,\n          photoUrl: socialAuthUser.user.photoURL,\n          //email: socialAuthUser.user.email,\n          roles: {}\n        }, {\n          merge: true\n        });\n      }).then(() => {\n        this.setState({\n          error: null\n        });\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      error: null\n    };\n  }\n\n  render() {\n    const error = this.state.error;\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      style: {\n        fontSize: \"20px\"\n      },\n      className: \"github\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fa fa-github\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), \" \", \"Sign In with Github\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\nconst SignInGoogle = compose(withRouter, withFirebase)(SignInGoogleBase);\nconst SignInFacebook = compose(withRouter, withFirebase)(SignInFacebookBase);\nconst SignInGithub = compose(withRouter, withFirebase)(SignInGithubBase);\nexport default SignInPage;\nexport { SignInGoogle };\nexport { SignInForm };\nexport { SignInFacebook };\nexport { SignInGithub };","map":{"version":3,"sources":["/Users/nick/devedit/src/components/SignIn/index.js"],"names":["React","Component","withRouter","compose","SignUpLink","PasswordForgetLink","withFirebase","ROUTES","SignInPage","fontSize","textAlign","INITIAL_STATE","email","password","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignInFormBase","constructor","props","onSubmit","event","state","firebase","doSignInWithEmailAndPassword","then","setState","history","push","HOME","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","SignInGoogleBase","doSignInWithGoogle","socialAuthUser","user","photoURL","console","log","uid","set","username","displayName","photoUrl","roles","merge","code","SignInFacebookBase","doSignInWithFacebook","additionalUserInfo","profile","SignInGithubBase","doSignInWithGithub","SignInForm","SignInGoogle","SignInFacebook","SignInGithub"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport  PasswordForgetLink  from '../PasswordForgetForm';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n    <div className=\"wrapper\">\n        <p style={{fontSize:\"28px\"}}>SignIn</p>\n        <SignInGoogle /> \n        <SignInFacebook />\n        <SignInGithub/>\n\n        <p style={{ textAlign: \"center\" }}>Or sign in manually:</p>\n\n\n        <SignInForm />\n\n        {/*<p className=\"btn-text\"><b>Sign in with google</b></p>*/}\n\n\n\n\n         <PasswordForgetLink /> \n        <SignUpLink />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n    'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <div className=\"view-container\">\n                <form onSubmit={this.onSubmit} className=\"devedit-form\">\n                    <fieldset>\n                        <input\n                            name=\"email\"\n                            value={email}\n                            onChange={this.onChange}\n                            type=\"text\"\n                            placeholder=\"Email Address\"\n                        />\n                        <input\n                            name=\"password\"\n                            value={password}\n                            onChange={this.onChange}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                        <button className=\"button-tertiary\" disabled={isInvalid} type=\"submit\">\n                            Sign In\n        </button>\n\n                        {error && <p>{error.message}</p>}\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n   super(props);\n\n     this.state = {\n        error: null,\n        photoURL:\"\"\n     };\n     \n  }\n\n  onSubmit = event => {\n      this.props.firebase\n          .doSignInWithGoogle()\n      .then(socialAuthUser => {\n       // Create a user in your Firebase Realtime Database too\n       if(socialAuthUser.user.photoURL===\"\"){\n         console.log(\"photoUrl\",socialAuthUser.user.photoURL,)\n        return this.props.firebase.user(socialAuthUser.user.uid).set(\n            {\n\n                username: socialAuthUser.user.displayName,\n                photoUrl: socialAuthUser.user.photoURL,\n             email: socialAuthUser.user.email,\n            roles: {},\n          },\n           { merge: true },\n          )}\n          else{\n            return this.props.firebase.user(socialAuthUser.user.uid).set(\n              {\n  \n                  username: socialAuthUser.user.displayName,\n                 //photoUrl: socialAuthUser.user.photoURL,\n               email: socialAuthUser.user.email,\n              roles: {},\n            },\n             { merge: true },\n            )\n          }\n      })\n          .then(() => {\n              this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n     })\n      .catch(error => {\n       if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n         error.message = ERROR_MSG_ACCOUNT_EXISTS;\n         }\n\n          this.setState({ error });\n      });\n\n     event.preventDefault();\n   };\n\n  render() {\n    const { error } = this.state;\n\n      return (\n      \n      <form onSubmit={this.onSubmit}>\n{/*  <button type=\"submit\" className=\"googlebtn\" style={{ fontSize: \"24px\" }}> <i class=\"fa fa-google fa-fw\" style={{ float: \"left\" }}/>{\"  \"}\n            \n                <p style={{ textAlighn: \"\" }}> Login with Google+</p> </button>*/}\n\n              <button button type=\"submit\" className=\"googlebtn\" style={{ fontSize: \"20px\" }}><i class=\"fa fa-google fa-fw\" > </i> Login with Google\n \n  \n</button>\n{error && <p>{error.message}</p>}\n </form>\n \n \n);\n}\n}\n\n class SignInFacebookBase extends Component {\n   constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n   onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n       .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        if(socialAuthUser.additionalUserInfo.profile.photoURL===\"\"){\n         return this.props.firebase.user(socialAuthUser.user.uid).set(\n           {\n                 username: socialAuthUser.additionalUserInfo.profile.name,\n                 photoUrl: socialAuthUser.additionalUserInfo.profile.photoURL,\n            email: socialAuthUser.additionalUserInfo.profile.email,\n            roles: {},\n                 /*username: socialAuthUser.user.displayName,\n                 photoUrl: socialAuthUser.user.photoURL,\n                 email: socialAuthUser.user.email,\n                 roles: {},*/\n          },\n           { merge: true },\n         )} else{\n          return this.props.firebase.user(socialAuthUser.user.uid).set(\n            {\n                  username: socialAuthUser.additionalUserInfo.profile.name,\n                 // photoUrl: socialAuthUser.additionalUserInfo.profile.photoURL,\n             email: socialAuthUser.additionalUserInfo.profile.email,\n             roles: {},\n                  /*username: socialAuthUser.user.displayName,\n                  photoUrl: socialAuthUser.user.photoURL,\n                  email: socialAuthUser.user.email,\n                  roles: {},*/\n           },\n            { merge: true },\n          )\n         }\n       })\n    .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n       })\n      .catch(error => {\n       if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n         this.setState({ error });\n      });\n\n     event.preventDefault();\n   };\n\n   render() {\n     const { error } = this.state;\n\n     return (\n       <form onSubmit={this.onSubmit}>\n             <button type=\"submit\" style={{ fontSize: \"20px\" }} className=\"fb\"><i class=\"fa fa-facebook fa-fw\" />Sign In with Facebook</button>\n\n       {error && <p>{error.message}</p>}\n      </form>\n     );\n   }\n }\n\nclass SignInGithubBase extends Component {\n  constructor(props) {\n     super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n        .doSignInWithGithub()\n       .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n         return this.props.firebase.user(socialAuthUser.user.uid).set(\n           {\n                 username: socialAuthUser.additionalUserInfo.profile.name,\n                 email: socialAuthUser.additionalUserInfo.profile.email,\n                 //roles: {},\n                 //username: socialAuthUser.user.displayName,\n                 //username: socialAuthUser.user.displayName,\n                 photoUrl: socialAuthUser.user.photoURL,\n                 //email: socialAuthUser.user.email,\n                 roles: {},\n          },\n          { merge: true },\n         );\n      })\n        .then(() => {\n            this.setState({ error: null });\n         this.props.history.push(ROUTES.HOME);\n       })\n       .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n         }\n\n        this.setState({ error });\n       });\n\n     event.preventDefault();\n   };\n\n  render() {\n    const { error } = this.state;\n\n   return (\n       <form onSubmit={this.onSubmit}>\n           <button type=\"submit\" style={{ fontSize: \"20px\" }} className=\"github\"><i class=\"fa fa-github\" />{\" \"}Sign In with Github</button>\n         \n      \n       {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n }\n\nconst SignInForm = compose(\n    withRouter,\n    withFirebase,\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase,\n)(SignInGoogleBase);\n\n const SignInFacebook = compose(\n  withRouter,\n  withFirebase,\n)(SignInFacebookBase);\n\nconst SignInGithub = compose(\n  withRouter,\n  withFirebase,\n)(SignInGithubBase);\n\nexport default SignInPage;\n\nexport { SignInGoogle };\nexport { SignInForm };\nexport { SignInFacebook };\nexport { SignInGithub };"]},"metadata":{},"sourceType":"module"}