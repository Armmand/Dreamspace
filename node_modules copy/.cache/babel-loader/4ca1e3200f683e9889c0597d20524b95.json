{"ast":null,"code":"import _objectSpread from \"/Users/nick/devedit/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/nick/devedit/src/components/PasswordForget/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst password = () => React.createElement(\"div\", {\n  className: \"wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  style: {\n    fontSize: \"28px\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"PasswordForget \"), React.createElement(PasswordForgetForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const email = this.state.email;\n      this.props.firebase.doPasswordReset(email).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          error = _this$state.error;\n    const isInvalid = email === '';\n    return React.createElement(\"div\", {\n      className: \"view-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"devedit-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      className: \"button-tertiary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Reset My Password\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, error.message)));\n  }\n\n}\n\n{\n  /* const PasswordForgetLink = () => (\n               \n   <p>\n     <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n         </p>\n       \n  );*/\n}\nexport default password;\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\nexport { PasswordForgetForm };\nexport { PasswordForgetFormBase };","map":{"version":3,"sources":["/Users/nick/devedit/src/components/PasswordForget/index.js"],"names":["React","Component","Link","withFirebase","ROUTES","password","fontSize","INITIAL_STATE","email","error","PasswordForgetFormBase","constructor","props","onSubmit","event","state","firebase","doPasswordReset","then","setState","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","PasswordForgetForm"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAIT;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAG,EAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAIS,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJT,CAJR;;AAYQ,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,KAAK,EAAE;AAFa,CAAtB;;AAKA,MAAMC,sBAAN,SAAqCT,SAArC,CAA+C;AAC7CU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMnBC,QANmB,GAMRC,KAAK,IAAI;AAAA,YACVN,KADU,GACA,KAAKO,KADL,CACVP,KADU;AAGlB,WAAKI,KAAL,CAAWI,QAAX,CACGC,eADH,CACmBT,KADnB,EAEGU,IAFH,CAEQ,MAAM;AACV,aAAKC,QAAL,mBAAmBZ,aAAnB;AACD,OAJH,EAKGa,KALH,CAKSX,KAAK,IAAI;AACd,aAAKU,QAAL,CAAc;AAAEV,UAAAA;AAAF,SAAd;AACD,OAPH;AASAK,MAAAA,KAAK,CAACO,cAAN;AACD,KAnBkB;;AAAA,SAqBnBC,QArBmB,GAqBRR,KAAK,IAAI;AAClB,WAAKK,QAAL,CAAc;AAAE,SAACL,KAAK,CAACS,MAAN,CAAaC,IAAd,GAAqBV,KAAK,CAACS,MAAN,CAAaE;AAApC,OAAd;AACD,KAvBkB;;AAGjB,SAAKV,KAAL,qBAAkBR,aAAlB;AACD;;AAqBDmB,EAAAA,MAAM,GAAG;AAAA,wBACkB,KAAKX,KADvB;AAAA,UACCP,KADD,eACCA,KADD;AAAA,UACQC,KADR,eACQA,KADR;AAGP,UAAMkB,SAAS,GAAGnB,KAAK,KAAK,EAA5B;AAEE,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAM,MAAA,QAAQ,EAAE,KAAKK,QAArB;AAA+B,MAAA,SAAS,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWP,KAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKc,QAHjB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,WAAW,EAAC,eALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAQI;AAAQ,MAAA,QAAQ,EAAEK,SAAlB;AAA6B,MAAA,IAAI,EAAC,QAAlC;AAA2C,MAAA,SAAS,EAAC,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARJ,EAYClB,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACmB,OAAV,CAZV,CADE,CADJ;AAkBH;;AAjD4C;;AAoD/C;AAAC;;;;;;;AAOI;AAEL,eAAevB,QAAf;AACA,MAAMwB,kBAAkB,GAAG1B,YAAY,CAACO,sBAAD,CAAvC;AAEA,SAASmB,kBAAT;AACA,SAASnB,sBAAT","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst password = () => (\n\n      \n    \n        <div className=\"wrapper\">\n            <p style={{ fontSize: \"28px\" }}>PasswordForget </p>\n    \n\n                 <PasswordForgetForm />\n            </div>\n        );\n\n        const INITIAL_STATE = {\n          email: '',\n          error: null,\n        };\n        \n        class PasswordForgetFormBase extends Component {\n          constructor(props) {\n            super(props);\n        \n            this.state = { ...INITIAL_STATE };\n          }\n        \n          onSubmit = event => {\n            const { email } = this.state;\n        \n            this.props.firebase\n              .doPasswordReset(email)\n              .then(() => {\n                this.setState({ ...INITIAL_STATE });\n              })\n              .catch(error => {\n                this.setState({ error });\n              });\n        \n            event.preventDefault();\n          };\n        \n          onChange = event => {\n            this.setState({ [event.target.name]: event.target.value });\n          };\n        \n          render() {\n            const { email, error } = this.state;\n        \n            const isInvalid = email === '';\n        \n              return (\n                  <div className=\"view-container\">\n                <form onSubmit={this.onSubmit} className=\"devedit-form\">\n                <input\n                  name=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  type=\"text\"\n                  placeholder=\"Email Address\"\n                />\n                    <button disabled={isInvalid} type=\"submit\" className=\"button-tertiary\">\n                  Reset My Password\n                </button>\n        \n                {error && <p>{error.message}</p>}\n                      </form>\n                      </div>\n            );\n          }\n        }\n        \n        {/* const PasswordForgetLink = () => (\n        \n             \n          <p>\n            <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n                </p>\n              \n        );*/}\n        \n        export default password;\n        const PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n        \n        export { PasswordForgetForm};\n        export { PasswordForgetFormBase };\n    \n\n\n\n"]},"metadata":{},"sourceType":"module"}