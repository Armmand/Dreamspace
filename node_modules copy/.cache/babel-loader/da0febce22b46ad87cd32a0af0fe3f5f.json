{"ast":null,"code":"var _jsxFileName = \"/Users/nick/devedit/src/components/AddReplys/index.js\";\nimport React from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\"; //import * as ROUTES from \"../../constants/routes\";\n\nimport { AuthUserContext } from \"../Session\";\n\nconst moment = require(\"moment\");\n\nclass AddReplys extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.togglePopup = () => {\n      //const{commentId}=this.props\n      this.setState({\n        showPopup: !this.state.showPopup\n      }); //console.log(\"this is the commentId\", commentId)\n    };\n\n    this.cancle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.handleSubmit = (e, authUser) => {\n      e.preventDefault();\n      const commentId = this.props.commentId;\n      console.log(\"this is the commentId for the reply\", commentId);\n      this.props.firebase //.replys(commentId)\n      .comments().add({\n        // commentId:commentId,\n        reply: this.state.reply,\n        timeCreated: moment().format(\" MMMM DD, YYYY  --  hh:mm:ss A \"),\n        userId: authUser.uid,\n        parentCommentId: commentId\n      }).then(docRef => {\n        console.log(\"ChildCommnetId\", docRef.id);\n        this.props.firebase.comment(commentId).update({\n          childCommentId: docRef.id,\n          parentCommentId: docRef.id\n        });\n        this.setState({\n          reply: \"\",\n          showPopup: false\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        reply: e.target.value\n      });\n    };\n\n    this.state = {\n      reply: \"\",\n      timeCreated: \"\",\n      // showPopup:true\n      childComments: []\n    };\n  }\n\n  render() {\n    // const { comment, limited, timeCreated,commentId } = this.props;\n    const commentId = this.props.commentId; // console .log(\"this is the comment Id i have from comment\",commentId)\n\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Reply\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.togglePopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-comment-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" \"), \" Reply\")), this.state.showPopup ? React.createElement(\"form\", {\n      className: \"card-addcomment\",\n      onSubmit: e => this.handleSubmit(e, authUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"commentgrid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"commentContent\" // id=\"reply\"\n      ,\n      type: \"text\",\n      value: this.state.reply //name=\"reply\"\n      ,\n      placeholder: \"Write your Reply here! \",\n      autoFocus: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit-btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Reply\"))) : null));\n  }\n\n}\n\nexport default compose(withFirebase, withRouter)(AddReplys);","map":{"version":3,"sources":["/Users/nick/devedit/src/components/AddReplys/index.js"],"names":["React","withFirebase","withRouter","compose","AuthUserContext","moment","require","AddReplys","Component","constructor","props","togglePopup","setState","showPopup","state","cancle","handleSubmit","e","authUser","preventDefault","commentId","console","log","firebase","comments","add","reply","timeCreated","format","userId","uid","parentCommentId","then","docRef","id","comment","update","childCommentId","handleChange","target","value","childComments","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n//import * as ROUTES from \"../../constants/routes\";\nimport { AuthUserContext } from \"../Session\";\nconst moment = require(\"moment\");\nclass AddReplys extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reply: \"\",\n      timeCreated: \"\",\n      // showPopup:true\n      childComments:[]\n    };\n  }\n\n  \n\n  togglePopup = () => {\n    //const{commentId}=this.props\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n    //console.log(\"this is the commentId\", commentId)\n  };\n  cancle = () => {\n    this.setState({ showPopup: false });\n  };\n\n  handleSubmit = (e, authUser) => {\n    e.preventDefault();\n    const commentId = this.props.commentId;\n    console.log(\"this is the commentId for the reply\", commentId);\n    this.props.firebase\n      //.replys(commentId)\n      .comments()\n      .add({\n        // commentId:commentId,\n        reply: this.state.reply,\n        timeCreated: moment().format(` MMMM DD, YYYY  --  hh:mm:ss A `),\n        userId: authUser.uid,\n        parentCommentId: commentId\n      })\n      .then(docRef => {\n        console.log(\"ChildCommnetId\", docRef.id);\n\n        this.props.firebase.comment(commentId).update({\n          childCommentId: docRef.id,\n          parentCommentId:docRef.id\n        });\n\n        this.setState({\n          reply: \"\",\n          showPopup: false\n        });\n      });\n  };\n  handleChange = e => {\n    console.log(e.target.value);\n    this.setState({\n      reply: e.target.value\n    });\n  };\n\n  render() {\n    // const { comment, limited, timeCreated,commentId } = this.props;\n    const { commentId } = this.props;\n    // console .log(\"this is the comment Id i have from comment\",commentId)\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            <div className=\"Reply\">\n              <button onClick={this.togglePopup}>\n                <i className=\"fa fa-comment-alt\"> </i> Reply\n              </button>\n            </div>\n            {this.state.showPopup ? (\n              <form\n                className=\"card-addcomment\"\n                onSubmit={e => this.handleSubmit(e, authUser)}\n              >\n                <div className=\"commentgrid\">\n                  <textarea\n                    className=\"commentContent\"\n                    // id=\"reply\"\n                    type=\"text\"\n                    value={this.state.reply}\n                    //name=\"reply\"\n                    placeholder=\"Write your Reply here! \"\n                    autoFocus={true}\n                    onChange={this.handleChange}\n                  ></textarea>\n\n                  <button className=\"submit-btn\" type=\"submit\">\n                    Reply\n                  </button>\n                  {/* <button className=\"submit-btn\" onClick={this.cancle}>\n                cancle\n        </button>*/}\n            </div>\n          </form>\n        ) : null}\n      </div>\n      )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default compose(withFirebase, withRouter)(AddReplys);"]},"metadata":{},"sourceType":"module"}